// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RazorLibraryProject.Data;

#nullable disable

namespace RazorLibraryProject.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230216052809_TestingRebuiltTable")]
    partial class TestingRebuiltTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "5da953e5-c4c8-448c-8a15-3324e65a0d8c",
                            Name = "admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "d5ce731b-b22e-4a51-b8af-eaf0b488064f",
                            Name = "borrower",
                            NormalizedName = "BORROWER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "c598d09d-85a8-4f1c-90d2-80437ec3b7d9",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6a037b5d-0fbe-492a-af52-0b070edfeaea",
                            Email = "borrower@library.net",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "borrower@library.net",
                            NormalizedUserName = "borrower@library.net",
                            PasswordHash = "AQAAAAIAAYagAAAAELb7or5n+9iKC7o2ohZCMiyd5PhXS4xLOSZZRXHYmpsNT27FdvvhOcSCOYEIOc4rsA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0d506aa4-0a24-4fc7-8804-148f902d9482",
                            TwoFactorEnabled = false,
                            UserName = "borrower@library.net"
                        },
                        new
                        {
                            Id = "1fa75cb8-fc5e-4cb8-ad8d-387bb4898144",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f0c15a2a-964f-4b11-b2f3-46ff49b808fc",
                            Email = "librarian@library.net",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "librarian@library.net",
                            NormalizedUserName = "librarian@library.net",
                            PasswordHash = "AQAAAAIAAYagAAAAEJcJnGHvbu68Rh33d5wg1lBw2kFGh6p1ENR95HfrGRYsEKprLgfy9WbNm9iXaDLovA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8cc529c2-1f61-4eef-a9b3-3cd436110575",
                            TwoFactorEnabled = false,
                            UserName = "librarian@library.net"
                        },
                        new
                        {
                            Id = "11492cce-a85a-41a4-88be-593bb7a294a9",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3dbdb5b3-056e-4cf8-b30b-2711f87c6571",
                            Email = "stephen.king@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAELNnORpP1zFP8xWM6iCHI4tLJuOigrpwDOhWrpEcvyUpbdpgmHZaLNtmuq02jDAFIA==",
                            PhoneNumber = "1-580-649-6316 x581",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "cf42ba29-6645-46fa-b263-d28e5eaaad14",
                            TwoFactorEnabled = false,
                            UserName = "Stephen.King"
                        },
                        new
                        {
                            Id = "e4877640-43fb-47be-b242-10f20c021e41",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "23dff3c1-f01b-4273-912c-cee59c0e8c28",
                            Email = "arnold18@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEH1E0zBetH+7cCieGjxf0QThcTjefsKXSAjlOn9tlAat/YmKLXRBEuzJreGLXVn2Ig==",
                            PhoneNumber = "1-949-881-2518 x906",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "00cd8e4e-7c24-4711-a86e-2f9d8400da41",
                            TwoFactorEnabled = false,
                            UserName = "Arnold18"
                        },
                        new
                        {
                            Id = "9ee59f3f-cb59-4289-b886-9de499278a82",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0c90cb47-6af3-4644-bd25-72d1fc1e8952",
                            Email = "theresa_gerhold@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAECRkB44EiZ7E8ZUy4Mxxx+OD4PwOAEkBVph0MFxepyKN8ZtJNS381O9VKFCeaMTOYQ==",
                            PhoneNumber = "(754) 482-9374 x0702",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "07687de8-d3c4-4cb9-9a3a-344b955dd4b5",
                            TwoFactorEnabled = false,
                            UserName = "Theresa_Gerhold"
                        },
                        new
                        {
                            Id = "f62740f8-12ea-4821-a7f9-f7c46241326a",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e8a4e5d1-fa51-4adb-9319-b38852f2ea9c",
                            Email = "elisa_bradtke58@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAENiCzwCFb8YMUwA02cHyAzQo3WwE/Ns/XWCnm7+4Ix1lusrF/sqzQxeizkWco2exiA==",
                            PhoneNumber = "526.486.0746 x01786",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0af81633-c1a4-4f4c-97e2-def532e9f139",
                            TwoFactorEnabled = false,
                            UserName = "Elisa_Bradtke58"
                        },
                        new
                        {
                            Id = "e58101d2-6e97-4df4-b03f-d35aed3417fe",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "89542210-e765-4eb6-a65b-bb5815e7a8df",
                            Email = "darin.brakus@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEOznwN1VN/jZzm06bGGSCOmXK+rk1gZ5rhhy6qq0E1/Ah/HxnQELQ8x2lXAMlz95VQ==",
                            PhoneNumber = "1-669-305-2058 x956",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1190efc2-7b9a-46a1-8ad4-e693488188a6",
                            TwoFactorEnabled = false,
                            UserName = "Darin.Brakus"
                        },
                        new
                        {
                            Id = "24c0d8c3-a3f9-402b-a0b0-f6923f406fa8",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8194539d-c50d-4e70-b0b8-48a5be849566",
                            Email = "carroll93@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEMNrMEOxSvfVpG7dSTblhU9EHide0f+YHalwA/NcOHg97ME8LSfsRFc3n7csalwYcQ==",
                            PhoneNumber = "975-883-6267",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "24cf6fb7-42cf-43d3-93ce-ae143113e769",
                            TwoFactorEnabled = false,
                            UserName = "Carroll93"
                        },
                        new
                        {
                            Id = "352667be-db7f-4cf2-99a5-f0038283888c",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "44f52411-6e93-4307-9684-31828e6e1761",
                            Email = "jeff_ruecker67@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEAxJePppYlHVHnJ1pVSPWqw6itFDcJEZwbd8wbUGYxpHT7+FDWcBwAhCV3lMMzK5mA==",
                            PhoneNumber = "998-331-2005 x1464",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ea3953dc-0d41-408c-843e-6763e82cfe0e",
                            TwoFactorEnabled = false,
                            UserName = "Jeff_Ruecker67"
                        },
                        new
                        {
                            Id = "2e0c24ba-ccee-4c78-bc02-eda76176bf33",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "234f431e-16fa-4322-a5d6-54991c22a8b6",
                            Email = "joe14@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEH0ad7lgH4aBHk/8v+UsmU3bs+wdrjs97pcC02g0/FSEFIOWYoiCdmWXutcO3IhbSg==",
                            PhoneNumber = "1-660-890-0595 x729",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0e78bec2-75de-4270-b67b-df7d51f63b17",
                            TwoFactorEnabled = false,
                            UserName = "Joe14"
                        },
                        new
                        {
                            Id = "e2ada14b-6f38-4902-ae25-75ca4d9bf9da",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "987e5eb9-349e-453f-93bc-32070c28d492",
                            Email = "blanca.klein72@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAENGr9y3NFS2jyvMBc1H2TYn0iZMzHXK7N8VbosKny/s7B6da/HbqHaEZezO+qCHfog==",
                            PhoneNumber = "413-479-5200",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "bb1d8601-988d-4ad1-a124-21b537afb3c9",
                            TwoFactorEnabled = false,
                            UserName = "Blanca.Klein72"
                        },
                        new
                        {
                            Id = "94e3e662-cd88-4abc-928d-b81efa0ac168",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b0713351-9923-47ec-8cfd-92b720255bdd",
                            Email = "fernando.abernathy@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEEV+uo2SgUq/tkLB/+n5/PdUMNtddXhHDP7YOq5v0+utcxQyg921OEcCbtmbLuD+nw==",
                            PhoneNumber = "334-890-6746",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f3ba59bc-c82b-48c0-bf4e-f60743efc837",
                            TwoFactorEnabled = false,
                            UserName = "Fernando.Abernathy"
                        },
                        new
                        {
                            Id = "41ac32d7-3081-48af-96dd-4321c77af640",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d21114d1-9a20-45b4-8ea9-5fdf5ecd7102",
                            Email = "allan_dicki@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAELzVZ9cGsBnSyfdo8XBvIIj9jPME8e2rz27fgPRYm82uTlhWUJs7lQKJ3c5N2ifMMA==",
                            PhoneNumber = "(864) 314-8160 x4559",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a36c29e3-5c11-456c-97a5-d138ae2570a9",
                            TwoFactorEnabled = false,
                            UserName = "Allan_Dicki"
                        },
                        new
                        {
                            Id = "dcb79b15-c3a8-4849-aa10-03eca7afd5f0",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "82f84d58-0145-469b-aeb4-69c3e7e433e4",
                            Email = "lindsey_schuster@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEFDLtyeLZxS3Q5f7wV4IvmMMFHKMcIleChQk9BMN9M3OzHDtqVyZLpt7fEuhr3Hv8Q==",
                            PhoneNumber = "531-681-7967 x02032",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e5be6eec-b01e-4a29-8982-5ea5c6a21861",
                            TwoFactorEnabled = false,
                            UserName = "Lindsey_Schuster"
                        },
                        new
                        {
                            Id = "2033b1e8-1932-42bf-9421-4b1595b0e18c",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a94ec41c-a1ff-4606-b28a-49a1704f2e6d",
                            Email = "meredith.feest@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEI0+SfkxLpSOjQtdvbDjMU+FgfuXw8FfFEIk4KyMxZGEBbR0bT/cVnpxrzFVSLGNAg==",
                            PhoneNumber = "1-915-565-0268",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "69e8c200-e078-4b68-9226-259112e55f81",
                            TwoFactorEnabled = false,
                            UserName = "Meredith.Feest"
                        },
                        new
                        {
                            Id = "37a0eda6-7893-4754-9992-e0c601ef9b62",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "034e1218-ff8b-4f02-bb57-55be1283fa1f",
                            Email = "wade_ullrich@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEFjtKM9fIOaZr/Yl9Dm8PlMKSgydhh19SnVhUNqChZ4TSgIkkq7nGHHIxB64dEvENw==",
                            PhoneNumber = "998-617-4182",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d5b8e5ae-00ce-4a70-a3c5-293ae8887971",
                            TwoFactorEnabled = false,
                            UserName = "Wade_Ullrich"
                        },
                        new
                        {
                            Id = "79482d20-b4f2-496c-899f-b0d000d876a1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "df81f349-3683-405a-b74d-431e435268d8",
                            Email = "joey98@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEI+cazwg/QRVhlVpnRqAI4wFbJacqiff4rspbOJBIgq+hREUi9CoRuVBme3E1PrUWA==",
                            PhoneNumber = "556.974.4446 x2942",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a375ee04-0cd9-41b0-81bb-7ad8e9eaa2d4",
                            TwoFactorEnabled = false,
                            UserName = "Joey98"
                        },
                        new
                        {
                            Id = "0f20a043-0310-4d3b-b3e5-9a6d675186c3",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "abdc918e-519e-41c1-a3ca-9a518ab8357f",
                            Email = "eddie_torphy39@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEMoX5kCW0954uQftDZ+SApfAPGdpOEsu9JQyC9rUcg3zMcMmqNUW8r6l8p6Hic4+4g==",
                            PhoneNumber = "1-579-420-0965 x5841",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8b6f2780-d47d-4640-9d86-9230598344ed",
                            TwoFactorEnabled = false,
                            UserName = "Eddie_Torphy39"
                        },
                        new
                        {
                            Id = "2257a18f-f789-4fbb-9b7d-8a13531e756b",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ca57d11f-0aa2-48ad-be8c-aa167cd17c19",
                            Email = "joseph.parker38@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEJPLGOg9AeQjMgFf3PnT9hexIsiLMhJJr4Xz/izc4fnxYUU/6rqZqS3rKQiG3fB72w==",
                            PhoneNumber = "1-991-485-5247",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "54f6627c-4e3d-47de-9e6b-5025c957e4c4",
                            TwoFactorEnabled = false,
                            UserName = "Joseph.Parker38"
                        },
                        new
                        {
                            Id = "4a4d66da-18de-4299-b007-dbd99123489f",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8b9b717b-51b1-4203-8485-1f58eb3f68f6",
                            Email = "della.kuphal0@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEIqMWgflTCT1OGyfrmRamHSb1lirlru5lpMYrQRu0T+BTck6mmSkI0tcLr7e2dpmGQ==",
                            PhoneNumber = "(642) 908-9814 x896",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "bd78bbaf-412b-4cd9-81a4-8b19f701c4f9",
                            TwoFactorEnabled = false,
                            UserName = "Della.Kuphal0"
                        },
                        new
                        {
                            Id = "6e10ec99-21fe-4ca6-93fa-1fb6dbbe2dbd",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2c561b9d-6dc4-40be-9eb9-f79870cd5126",
                            Email = "alberta30@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAENWO9XX1/CVdflGEEnE5KerzvQcJvXx8QZNOB8KnzSF6+z4SdV7/7co090SnGikBKQ==",
                            PhoneNumber = "424.692.6688 x38499",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b17e8234-9b67-4b76-ba9f-fbbb7267c3f5",
                            TwoFactorEnabled = false,
                            UserName = "Alberta30"
                        },
                        new
                        {
                            Id = "3b69c73c-1bb4-4423-8835-ed72c8c74603",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "edac3058-7d3e-4350-a4e8-b632bd039f05",
                            Email = "darrel6@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEI+co8iz3Hwr602VP3L9cGX3sun9y2cVHJNikPzuM7IknGvll/f8wtFVS2ykRAyjSA==",
                            PhoneNumber = "524-812-9526",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c00e503f-e951-4e5e-bf2b-7016223316c8",
                            TwoFactorEnabled = false,
                            UserName = "Darrel6"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "c598d09d-85a8-4f1c-90d2-80437ec3b7d9",
                            RoleId = "d5ce731b-b22e-4a51-b8af-eaf0b488064f"
                        },
                        new
                        {
                            UserId = "1fa75cb8-fc5e-4cb8-ad8d-387bb4898144",
                            RoleId = "5da953e5-c4c8-448c-8a15-3324e65a0d8c"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("RazorLibraryProject.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AuthorFirst")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthorLast")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isAvailable")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Book");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorFirst = "Don",
                            AuthorLast = "Walker",
                            Description = "Quia architecto dicta repellendus voluptatibus sint nemo aut ea. Nulla velit quae. Quo enim at. Perspiciatis repellat vel.",
                            Title = "Enhanced heuristic conglomeration",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 2,
                            AuthorFirst = "Mandy",
                            AuthorLast = "Stiedemann",
                            Description = "Molestiae reprehenderit ducimus commodi adipisci vel sed quia. Optio reiciendis officiis cumque consectetur. Reiciendis ut rerum iure voluptatem vel ut quidem. Quos et culpa.",
                            Title = "Adaptive heuristic attitude",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 3,
                            AuthorFirst = "Thomas",
                            AuthorLast = "Kozey",
                            Description = "Velit atque harum sunt. Reprehenderit quos iure eius itaque tenetur molestias natus fugit qui. Atque aliquid ad. Ut ad ratione sunt consequatur voluptatem qui qui accusamus quibusdam.",
                            Title = "Profit-focused even-keeled hierarchy",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 4,
                            AuthorFirst = "April",
                            AuthorLast = "Lemke",
                            Description = "Magnam explicabo in suscipit velit. Occaecati sapiente aperiam velit. Non sed tempore placeat consequatur.",
                            Title = "Persistent foreground installation",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 5,
                            AuthorFirst = "Sherry",
                            AuthorLast = "Corwin",
                            Description = "Labore ducimus delectus in voluptatem. Placeat ratione laborum omnis. Nesciunt non placeat occaecati tempora tenetur facere alias est veniam.",
                            Title = "Versatile discrete capacity",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 6,
                            AuthorFirst = "Daisy",
                            AuthorLast = "Watsica",
                            Description = "Occaecati fuga et sunt velit amet veritatis dolorem mollitia. Quibusdam excepturi aspernatur perspiciatis eos. In voluptatem quo est tempora voluptatum ut ad id. Sequi dolor non ut rerum dolor.",
                            Title = "Fundamental asymmetric framework",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 7,
                            AuthorFirst = "Dave",
                            AuthorLast = "Hudson",
                            Description = "Velit necessitatibus tempore. Neque odit amet quia ut fugiat et veniam exercitationem. Autem dolor beatae fugiat nulla voluptatem. Voluptate ut occaecati ut et minus facilis officiis necessitatibus.",
                            Title = "Progressive dedicated frame",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 8,
                            AuthorFirst = "Josh",
                            AuthorLast = "Gottlieb",
                            Description = "Praesentium temporibus ut voluptatum eaque placeat voluptate. Minus ipsa officiis dolorum. Nemo repellat assumenda ut vel harum inventore dolorem omnis officia.",
                            Title = "Team-oriented asynchronous hub",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 9,
                            AuthorFirst = "Bryan",
                            AuthorLast = "Senger",
                            Description = "In natus eaque maxime maiores. Ipsam repudiandae magnam sed beatae est quod fuga. Pariatur vero repellendus in et. Quis impedit aliquam et temporibus quia incidunt quos modi ut.",
                            Title = "Devolved mission-critical intranet",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 10,
                            AuthorFirst = "Merle",
                            AuthorLast = "Bayer",
                            Description = "Esse odit cupiditate aliquid dolorum sit molestiae. Hic aliquid ut quia error perferendis itaque. Earum maxime quam impedit quos. Nobis quia ut ea doloribus non in.",
                            Title = "Persevering maximized methodology",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 11,
                            AuthorFirst = "Erica",
                            AuthorLast = "Schaefer",
                            Description = "Dolores velit explicabo aut dolore. Distinctio repudiandae ut exercitationem ea. Fugit esse quia officia et autem eligendi error voluptate. Nostrum quos quas et. Dolorem dolor tenetur qui.",
                            Title = "Realigned zero defect utilisation",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 12,
                            AuthorFirst = "Genevieve",
                            AuthorLast = "Padberg",
                            Description = "Est illo provident rerum laboriosam blanditiis occaecati dolorem. Nihil esse ipsa suscipit voluptatibus inventore eius. Laborum reprehenderit porro vel sunt enim omnis aut ut est. Quo expedita omnis vero et. Aperiam inventore et distinctio similique qui sit saepe sint. Consequatur voluptates sed voluptas harum tenetur fuga accusantium.",
                            Title = "Centralized reciprocal collaboration",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 13,
                            AuthorFirst = "Eduardo",
                            AuthorLast = "McDermott",
                            Description = "Est error aspernatur hic natus nemo cumque corrupti adipisci. Magni omnis et voluptatem voluptatem id veritatis incidunt delectus. Odio in non magni consequatur maxime et adipisci et neque. Sunt similique animi eum culpa iste. Nam qui repellat.",
                            Title = "Monitored upward-trending productivity",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 14,
                            AuthorFirst = "Susie",
                            AuthorLast = "Satterfield",
                            Description = "Quasi et delectus vel facere amet non. Molestiae architecto quibusdam ut modi. Nostrum cum corporis ea et sint officia consectetur sed.",
                            Title = "Digitized zero defect throughput",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 15,
                            AuthorFirst = "Vicki",
                            AuthorLast = "Kulas",
                            Description = "Error maiores commodi. Odio molestiae unde perferendis aliquam quis inventore et. Et consectetur eius accusantium laudantium. Nostrum vel ipsam sint eos aliquid eveniet deserunt nihil fuga.",
                            Title = "Up-sized zero defect definition",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 16,
                            AuthorFirst = "Agnes",
                            AuthorLast = "Hansen",
                            Description = "Enim ut alias dolor minima ea. Eligendi vitae voluptatem blanditiis velit eveniet et mollitia. Dolor tempora et doloremque officiis at et.",
                            Title = "Managed 6th generation monitoring",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 17,
                            AuthorFirst = "Wm",
                            AuthorLast = "Hilll",
                            Description = "Ut pariatur rerum voluptatibus officia occaecati saepe. Qui eum incidunt eum exercitationem. Ducimus porro quisquam beatae impedit magni qui rem. Aut similique ea incidunt iure dolore ipsa.",
                            Title = "Triple-buffered exuding internet solution",
                            isAvailable = false
                        });
                });

            modelBuilder.Entity("RazorLibraryProject.Models.LibraryAccount", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("roleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("userId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.HasIndex("roleId");

                    b.HasIndex("userId");

                    b.ToTable("LibraryAccount");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RazorLibraryProject.Models.LibraryAccount", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", "role")
                        .WithMany()
                        .HasForeignKey("roleId");

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "user")
                        .WithMany()
                        .HasForeignKey("userId");

                    b.Navigation("role");

                    b.Navigation("user");
                });
#pragma warning restore 612, 618
        }
    }
}
