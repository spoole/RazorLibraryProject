// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RazorLibraryProject.Data;

#nullable disable

namespace RazorLibraryProject.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230215044433_AddedLibrarianAndBorrower")]
    partial class AddedLibrarianAndBorrower
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "6ffc0068-2d8d-49bd-a8b5-3a081459915a",
                            Name = "admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "749a694d-5fd0-49dc-bca5-5c5d87ab5b4a",
                            Name = "borrower",
                            NormalizedName = "BORROWER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "b8eee965-6ea3-4e53-af6a-f4d801ed49e6",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7c0dc020-40c7-410f-a7b3-8eb646277e79",
                            Email = "borrower@library.net",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "borrower@library.net",
                            NormalizedUserName = "borrower@library.net",
                            PasswordHash = "AQAAAAIAAYagAAAAEI2VWeCM99BAklv0AKs2Ah22nGmX3ULfIkKp8yATENRz4avzJddKbHvmvjH6KCyvmw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9ba06c69-4818-4ec9-b5eb-0a1e8a20634a",
                            TwoFactorEnabled = false,
                            UserName = "borrower@library.net"
                        },
                        new
                        {
                            Id = "ccc39330-df41-49d3-b774-b75162115eaf",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f24cdac4-7748-49cf-a2e5-dfc317bb03d8",
                            Email = "librarian@library.net",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "librarian@library.net",
                            NormalizedUserName = "librarian@library.net",
                            PasswordHash = "AQAAAAIAAYagAAAAEF9OXppcoEwc4BYpZX2JvWGn5fYraV4aCdmbK692vHAluAImPEQfnFFbt1/3aT8bzg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a2fc9a02-7e70-46a9-a42f-cd5fce369153",
                            TwoFactorEnabled = false,
                            UserName = "librarian@library.net"
                        },
                        new
                        {
                            Id = "9bb03ad0-83c3-4bba-bb2a-1c8deb7ae6a1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "bec293ae-99be-4524-b089-3a893c5ce93f",
                            Email = "joanna63@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEM2gQSQPwYtnCZX92+CMIpgwHCcR1697fmO+InKS7DeTnlEQAR0UOW36RcWJQmvT4g==",
                            PhoneNumber = "531.826.4233",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2a0282f2-7cbd-419c-a725-4f7f4a46f376",
                            TwoFactorEnabled = false,
                            UserName = "Joanna63"
                        },
                        new
                        {
                            Id = "dbe77f51-efd5-4095-a013-aefe4f0259c5",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1fb48b4f-862e-4097-88e8-fb72a536803b",
                            Email = "gertrude70@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEM39xcl8CVAI3dtTw1pq0MI+Klsl77BvW22ChzyRPJN3nYlVSuJT8dZYQlEfxSo0EQ==",
                            PhoneNumber = "1-456-773-1315",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "676a4935-c7ef-430b-b761-ba829eeda021",
                            TwoFactorEnabled = false,
                            UserName = "Gertrude70"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "b8eee965-6ea3-4e53-af6a-f4d801ed49e6",
                            RoleId = "749a694d-5fd0-49dc-bca5-5c5d87ab5b4a"
                        },
                        new
                        {
                            UserId = "ccc39330-df41-49d3-b774-b75162115eaf",
                            RoleId = "6ffc0068-2d8d-49bd-a8b5-3a081459915a"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("RazorLibraryProject.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AuthorFirst")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthorLast")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isAvailable")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Book");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorFirst = "Alicia",
                            AuthorLast = "Walsh",
                            Description = "Ut fugiat aut non et a aut ipsum itaque. Dolorem aut error esse. Veritatis perferendis molestias voluptas eveniet laborum et ipsum aliquam qui.",
                            Title = "Sharable client-driven initiative",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 2,
                            AuthorFirst = "Rene",
                            AuthorLast = "Moore",
                            Description = "Sapiente neque ut aut beatae consequuntur earum magnam repudiandae. Sint et et voluptas cupiditate porro similique nam rerum officia. Dolores qui in molestiae architecto corrupti. Repudiandae eius totam ut at. Voluptatem nobis labore temporibus consectetur. Qui tempora voluptates iure quia corrupti officiis voluptatem voluptatem.",
                            Title = "Persistent optimal help-desk",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 3,
                            AuthorFirst = "Ryan",
                            AuthorLast = "Morar",
                            Description = "Omnis commodi dolore tempore ipsum delectus asperiores facilis quis. Aperiam distinctio ab sit omnis omnis. Ratione libero commodi quaerat. Cumque id mollitia tenetur dolor dolores nihil aliquid maiores qui. Veniam distinctio reprehenderit sed aut tempore autem et sint. Consequatur iure natus dignissimos non magnam aut earum qui in.",
                            Title = "Multi-tiered explicit interface",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 4,
                            AuthorFirst = "Roderick",
                            AuthorLast = "Moen",
                            Description = "Voluptate est reiciendis asperiores voluptatem non repudiandae sed dolores culpa. Dolorem vel fugit laboriosam. Debitis illum et nostrum tenetur nihil iusto.",
                            Title = "Innovative web-enabled open system",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 5,
                            AuthorFirst = "Samuel",
                            AuthorLast = "Leuschke",
                            Description = "Aut libero vel exercitationem non voluptatum facilis occaecati. Quia tenetur eveniet adipisci fugiat accusamus rerum. Consequatur sit iure minima voluptas. Numquam ut aspernatur sint aut blanditiis minus tempora culpa. Error ut ut voluptas culpa culpa rerum eos laudantium harum. Atque beatae quia porro et eaque repudiandae dolorem.",
                            Title = "User-friendly responsive functionalities",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 6,
                            AuthorFirst = "Mable",
                            AuthorLast = "Von",
                            Description = "Cum quia accusantium sit facilis reiciendis. Dolores tempora quasi ut iusto officiis dolorum qui. Omnis dolor laborum at explicabo quo. Ab ipsa in labore ea eveniet perspiciatis accusantium voluptates. Et voluptatibus eligendi earum itaque at eum dolor fugit omnis.",
                            Title = "Streamlined dedicated superstructure",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 7,
                            AuthorFirst = "Richard",
                            AuthorLast = "Oberbrunner",
                            Description = "Optio commodi quae et et deleniti eaque provident voluptate modi. Ea quo alias eum quia. Praesentium sunt aut quis id reprehenderit animi nam.",
                            Title = "Organized exuding projection",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 8,
                            AuthorFirst = "Marvin",
                            AuthorLast = "Haley",
                            Description = "Eligendi est qui vel sed dolores minus. Ex placeat nisi enim aliquam dolorum quis iure aspernatur. Velit fugit reiciendis qui eius exercitationem.",
                            Title = "Multi-channelled intermediate collaboration",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 9,
                            AuthorFirst = "Kenneth",
                            AuthorLast = "Hodkiewicz",
                            Description = "Nesciunt repudiandae sed qui quis. Vitae quidem ipsum eos aut unde est. Ullam expedita repellendus et repellendus adipisci vero est eaque minus. Nisi rerum in aliquam officia porro non consectetur.",
                            Title = "Programmable full-range benchmark",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 10,
                            AuthorFirst = "Darrel",
                            AuthorLast = "Denesik",
                            Description = "Numquam nesciunt quaerat exercitationem facere dolorem sequi nihil. Quod quos dolorem laborum perferendis voluptate. In est exercitationem et similique sunt fuga. Exercitationem eum dolore at. Accusantium rerum qui ut sit.",
                            Title = "Quality-focused systemic success",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 11,
                            AuthorFirst = "Rudy",
                            AuthorLast = "Yundt",
                            Description = "Nemo animi ut repellat officia temporibus dicta molestiae. Quia nulla earum sint nihil minus reiciendis in laborum. Soluta mollitia qui perspiciatis reiciendis officiis nihil facere.",
                            Title = "Virtual intangible orchestration",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 12,
                            AuthorFirst = "Dominick",
                            AuthorLast = "Ritchie",
                            Description = "Temporibus officia sit voluptas qui dolor vel assumenda cupiditate repellendus. Soluta praesentium natus asperiores temporibus culpa qui similique. Sequi non itaque explicabo adipisci rerum voluptates. Magni ipsa voluptatem earum totam laborum consequatur et. Accusantium vel aperiam deleniti aut reiciendis distinctio.",
                            Title = "Devolved motivating array",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 13,
                            AuthorFirst = "Sandy",
                            AuthorLast = "Ondricka",
                            Description = "Corporis et atque magni. Aut quia quibusdam consectetur delectus mollitia aut et. Aut facere fuga voluptas quo blanditiis. Voluptatem fugit delectus rem totam et perferendis possimus. Perspiciatis praesentium facilis sint voluptates. Sequi nostrum omnis mollitia.",
                            Title = "Decentralized composite support",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 14,
                            AuthorFirst = "Patty",
                            AuthorLast = "Windler",
                            Description = "Voluptates voluptatum quibusdam labore. Ipsam aut ipsum fugiat rerum sit. Asperiores occaecati dolor culpa deserunt.",
                            Title = "De-engineered 4th generation database",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 15,
                            AuthorFirst = "Kara",
                            AuthorLast = "Glover",
                            Description = "Amet ex explicabo ipsam rerum laudantium libero omnis. Ratione ut sapiente iusto enim et ab. Libero voluptates eum quis magni veritatis dolores iusto consequuntur. Ut et accusamus. Id nam facilis.",
                            Title = "Proactive well-modulated challenge",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 16,
                            AuthorFirst = "Erika",
                            AuthorLast = "Brakus",
                            Description = "Iure eaque natus magni veritatis veritatis nisi. Blanditiis vel aliquam. Expedita sapiente nihil omnis.",
                            Title = "Reactive regional capacity",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 17,
                            AuthorFirst = "Allan",
                            AuthorLast = "Stanton",
                            Description = "Magni accusamus odio voluptatem quas perferendis. Odit reprehenderit rerum libero accusamus natus natus. Omnis laudantium quia impedit. Et cumque rerum aut officia. Neque quos est temporibus.",
                            Title = "Optional bi-directional adapter",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 18,
                            AuthorFirst = "Gordon",
                            AuthorLast = "Morissette",
                            Description = "Commodi sint sit et exercitationem qui occaecati autem accusamus dicta. Et et aspernatur necessitatibus excepturi tempore eos voluptas. Perspiciatis ut doloribus molestiae impedit aut aut et deserunt consequatur.",
                            Title = "Self-enabling even-keeled function",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 19,
                            AuthorFirst = "Robin",
                            AuthorLast = "Littel",
                            Description = "Delectus repellat explicabo commodi vero. In reprehenderit ut magni nulla architecto odit qui ex doloribus. Sint iure modi quis beatae. Eveniet omnis est voluptates commodi esse blanditiis consequatur quasi. Ea eius sunt.",
                            Title = "Optional scalable matrices",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 20,
                            AuthorFirst = "Carla",
                            AuthorLast = "Osinski",
                            Description = "Non qui repellendus. Aperiam commodi cupiditate et est. Optio placeat maiores consequuntur nihil deleniti quis dolores. Officiis itaque sit quia provident distinctio placeat aliquam.",
                            Title = "Profound zero administration approach",
                            isAvailable = true
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
