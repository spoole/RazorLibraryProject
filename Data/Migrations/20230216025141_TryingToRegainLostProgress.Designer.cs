// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RazorLibraryProject.Data;

#nullable disable

namespace RazorLibraryProject.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230216025141_TryingToRegainLostProgress")]
    partial class TryingToRegainLostProgress
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "0089b683-549c-4b35-a178-9157b5598173",
                            Name = "admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "60de7e58-232d-4daf-9bac-f634b4bd2db8",
                            Name = "borrower",
                            NormalizedName = "BORROWER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "5f5c6238-f4ba-4c07-b507-54e49d15ce15",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "71cb4541-0e75-44f3-9573-0462fde49d10",
                            Email = "borrower@library.net",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "borrower@library.net",
                            NormalizedUserName = "borrower@library.net",
                            PasswordHash = "AQAAAAIAAYagAAAAEMPPXx4hPiub8hQyI6x9sWcJL1SHlGzJ/VHLvkyt7osy2YKHg6y6OpcCCbUQCSITog==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2df788a3-01a3-4c8b-927f-12e196675b06",
                            TwoFactorEnabled = false,
                            UserName = "borrower@library.net"
                        },
                        new
                        {
                            Id = "9b712793-d901-4fb0-be02-2d1e09b182d9",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "32e0cfd7-7c31-4c38-b83f-ba6ff5288ffb",
                            Email = "librarian@library.net",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "librarian@library.net",
                            NormalizedUserName = "librarian@library.net",
                            PasswordHash = "AQAAAAIAAYagAAAAEIL1e56oW6RBKPhWaZ0G9Yf9ZsTY5xcMsV+nqmuyd6rQcj2bCkGX7Rym9eaLXB5JWA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ef3fcd76-1ad7-43f8-9bc3-ef41d97b81a6",
                            TwoFactorEnabled = false,
                            UserName = "librarian@library.net"
                        },
                        new
                        {
                            Id = "420cfc75-d671-4bb9-83e8-2f9f845f8d5b",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5aaa2f7e-522e-4afc-ade6-fe005e3a2855",
                            Email = "tricia45@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEP/pFACcQYIsdo+50Rl3K0RGa4EfAe23ZeKOJLsEG0MxceZEsp57MfBAHmEO3RLx8w==",
                            PhoneNumber = "(671) 905-0780 x846",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2b1ddaa1-b0e4-4840-bb17-30c300269cd5",
                            TwoFactorEnabled = false,
                            UserName = "Tricia45"
                        },
                        new
                        {
                            Id = "39b869c7-a09d-4568-9caa-55e5745e8247",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "699ebca9-ed10-41b4-b8d9-42545968d1e7",
                            Email = "doris_kassulke@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAECp4DIKbYCxv1M2R6QuFiy7RGE/78/A+aXiljF2cbQqgKtCAVIOhvF6ZqdqRSPi8RQ==",
                            PhoneNumber = "556-391-9785",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1d920ef5-8d0a-4b32-9dfe-5a2676e94cab",
                            TwoFactorEnabled = false,
                            UserName = "Doris_Kassulke"
                        },
                        new
                        {
                            Id = "1bd7a767-7e56-49ac-86e0-f12ca2d96358",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "dfc89dd2-25d1-4781-8b40-a8032ac7dfd1",
                            Email = "bruce18@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEJ5FbluddC+H22gzQamnwaSkpWzEhYOa1aHGhuOg/cBHVerpc49hPXr9ehnhcHPQ/Q==",
                            PhoneNumber = "(521) 984-5384",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9963dac9-aecb-40fd-9c7d-b112f67010c4",
                            TwoFactorEnabled = false,
                            UserName = "Bruce18"
                        },
                        new
                        {
                            Id = "e62207db-787e-46aa-94b9-06013ef49302",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "790ebe5c-5bfd-43c2-93eb-c9b17e0f053a",
                            Email = "bethany78@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAECJTt9ELN9vtkT1hR3F1fa96tzcsjh0FPTPYC46dUzTLjvc/VOxO+E9eUy8oKBteww==",
                            PhoneNumber = "310-935-8145 x1136",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f7fe46b2-8ef9-46e4-b4b6-83e0ac8b8388",
                            TwoFactorEnabled = false,
                            UserName = "Bethany78"
                        },
                        new
                        {
                            Id = "e0c2db33-d6bf-4fc4-bb5f-51e32129ae03",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b12fd656-f2c2-4c97-9199-799d986755c9",
                            Email = "viola_daugherty@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEBXEU70Dsr0+/8YehKsiJELJjUwRtNXWpcfFzLLtwewVxe2BO5cDrPPLXcf6HqXmwA==",
                            PhoneNumber = "1-286-706-6935",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "98a8962e-ba46-43bc-aaec-0a2a1169fdf9",
                            TwoFactorEnabled = false,
                            UserName = "Viola_Daugherty"
                        },
                        new
                        {
                            Id = "66e70e5e-a750-456c-8418-405fee9e6dfd",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "07c3c641-c083-4d4f-af9f-9073b5be51fa",
                            Email = "nellie60@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEPutpvAjuR7RkRfDLHyEf78CIs+B2nfI9Wk4w2wzg9Wdkxg/i/s9/ABj6abF8+fvUA==",
                            PhoneNumber = "(252) 751-1334 x33386",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6250c100-b941-4a9d-8559-bbcd8b5ed921",
                            TwoFactorEnabled = false,
                            UserName = "Nellie60"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "5f5c6238-f4ba-4c07-b507-54e49d15ce15",
                            RoleId = "60de7e58-232d-4daf-9bac-f634b4bd2db8"
                        },
                        new
                        {
                            UserId = "9b712793-d901-4fb0-be02-2d1e09b182d9",
                            RoleId = "0089b683-549c-4b35-a178-9157b5598173"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("RazorLibraryProject.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AuthorFirst")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthorLast")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isAvailable")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Book");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorFirst = "Elijah",
                            AuthorLast = "Beier",
                            Description = "Ut voluptas neque rerum adipisci. Veniam fugiat repellat non. Non libero sapiente harum nam excepturi. Ut animi officiis perspiciatis id corporis recusandae repellat voluptate sit.",
                            Title = "De-engineered bi-directional database",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 2,
                            AuthorFirst = "Charlie",
                            AuthorLast = "Tromp",
                            Description = "Magni est rerum vel eos quisquam unde ex. Qui dolorem labore voluptas aliquam adipisci ad sunt. Inventore in corrupti corporis eligendi eius hic tenetur. Velit fugiat et aut. Non et maxime rerum quasi exercitationem explicabo.",
                            Title = "Digitized eco-centric capacity",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 3,
                            AuthorFirst = "Marsha",
                            AuthorLast = "Rosenbaum",
                            Description = "Officia atque id aut sit sit illo sunt est. Accusantium accusantium et expedita explicabo. Veniam voluptas quia placeat fugiat placeat. Architecto velit ipsa consequatur alias eveniet tempore numquam inventore voluptatibus.",
                            Title = "Adaptive impactful matrix",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 4,
                            AuthorFirst = "Olive",
                            AuthorLast = "Windler",
                            Description = "Voluptates alias fugiat odit laudantium quae iste eos. Ea et autem maiores odit pariatur optio ut eum et. Ab dolorum aut voluptates dignissimos voluptates et soluta impedit. Dolorem labore voluptatem placeat ipsam culpa distinctio voluptatem voluptas. Est odit et explicabo. Ea fugiat voluptate rerum eveniet possimus porro culpa accusamus sunt.",
                            Title = "Function-based bi-directional framework",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 5,
                            AuthorFirst = "Madeline",
                            AuthorLast = "Mitchell",
                            Description = "Culpa quaerat alias impedit est sunt. Quod eligendi et itaque enim asperiores autem consequatur aut unde. Vitae consequatur illum nihil id et eos dolorum. Quasi sint et sint ipsam ea nam nobis aut. Vel aut laudantium nisi aut culpa assumenda impedit aliquid quaerat.",
                            Title = "Balanced neutral capacity",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 6,
                            AuthorFirst = "Maria",
                            AuthorLast = "McCullough",
                            Description = "A et aut soluta non nihil omnis ab culpa. Repellat magnam eaque sint amet blanditiis odit nemo nostrum. Aliquam molestiae iusto temporibus praesentium qui praesentium quia. Aspernatur qui id qui. Consequatur reiciendis eligendi facere voluptatem.",
                            Title = "Reverse-engineered client-driven monitoring",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 7,
                            AuthorFirst = "Jody",
                            AuthorLast = "Walker",
                            Description = "Dolor eaque rem qui iste molestiae impedit est possimus. Corporis blanditiis consequatur ut rerum est aut quaerat. Et consectetur molestias corrupti quae error explicabo natus doloribus et. Culpa in sed itaque ut eos cupiditate. Beatae illum id magni nihil.",
                            Title = "Multi-layered solution-oriented instruction set",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 8,
                            AuthorFirst = "Annie",
                            AuthorLast = "Denesik",
                            Description = "Quia optio ab inventore. Voluptatum sed dicta. Explicabo atque delectus nam. Repellendus ex velit eum et. Est asperiores quia dignissimos quae magni. Sint est et repellendus amet.",
                            Title = "Operative well-modulated synergy",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 9,
                            AuthorFirst = "Arturo",
                            AuthorLast = "Dach",
                            Description = "Consequuntur et est vel exercitationem occaecati qui nemo officia occaecati. Dolor delectus adipisci aut molestias. Laudantium qui quia amet.",
                            Title = "Centralized reciprocal attitude",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 10,
                            AuthorFirst = "Jackie",
                            AuthorLast = "Haag",
                            Description = "Labore voluptas in aut amet sunt quo quae itaque. Expedita rem corporis excepturi necessitatibus. Non sint non modi animi iure dolorum ipsa.",
                            Title = "Customer-focused intermediate strategy",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 11,
                            AuthorFirst = "Timmy",
                            AuthorLast = "Konopelski",
                            Description = "Perspiciatis sunt ipsam facilis rerum. Nemo veritatis voluptate minima quam eveniet ut sit. Beatae maiores a quia corrupti repellendus. Dolores doloribus labore culpa beatae nobis. Corporis ut deserunt non illo cupiditate expedita nemo distinctio.",
                            Title = "Cross-platform 24/7 hardware",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 12,
                            AuthorFirst = "Becky",
                            AuthorLast = "Abbott",
                            Description = "Quibusdam numquam qui nisi voluptatem eveniet nobis suscipit consequuntur. Quis dolores aut. Est aspernatur iure doloremque.",
                            Title = "Profound didactic success",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 13,
                            AuthorFirst = "Crystal",
                            AuthorLast = "Sipes",
                            Description = "Exercitationem quas illum et enim magni voluptates. Sapiente architecto id consequatur rerum maiores facere sint. Aperiam aut magnam quaerat exercitationem a autem. Ut voluptatem et incidunt facilis non delectus dolorem.",
                            Title = "Configurable regional benchmark",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 14,
                            AuthorFirst = "Ervin",
                            AuthorLast = "Miller",
                            Description = "Deleniti facere vitae labore consectetur nulla ad est. Ad alias eum eveniet sunt accusamus dignissimos omnis. Incidunt aut et ut dicta possimus earum. Rerum error alias. Aperiam repellendus ea est et id temporibus qui voluptas. Aut molestiae consequatur ratione nihil et.",
                            Title = "Self-enabling neutral solution",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 15,
                            AuthorFirst = "Abel",
                            AuthorLast = "Langworth",
                            Description = "Non perspiciatis dolorem et in voluptate commodi non magni. Corporis optio et explicabo id voluptas consequuntur occaecati quis. Qui ducimus itaque cumque et doloribus.",
                            Title = "Ameliorated content-based access",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 16,
                            AuthorFirst = "Ida",
                            AuthorLast = "Vandervort",
                            Description = "Sit cum eum ex rerum repellendus repellendus dolorem. Delectus ea vel et reiciendis. Et veritatis quo. Et praesentium omnis aliquam occaecati et voluptas debitis qui.",
                            Title = "Total tertiary capacity",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 17,
                            AuthorFirst = "Sam",
                            AuthorLast = "Beatty",
                            Description = "Quia eaque sapiente in. Quia laborum sequi occaecati aut. Nobis debitis atque ut. Dicta aperiam nulla perspiciatis quae nisi voluptatem in.",
                            Title = "Visionary needs-based artificial intelligence",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 18,
                            AuthorFirst = "Cheryl",
                            AuthorLast = "Dibbert",
                            Description = "Eveniet blanditiis similique aut quis. Magnam ipsum voluptas sint. Est adipisci explicabo.",
                            Title = "Cross-platform solution-oriented hub",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 19,
                            AuthorFirst = "Clarence",
                            AuthorLast = "Quigley",
                            Description = "Earum libero numquam impedit veniam mollitia quaerat numquam in. Nesciunt dolorem illo ad. Rerum dignissimos ut dignissimos nobis iure nam. Et iure quos.",
                            Title = "Seamless grid-enabled open system",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 20,
                            AuthorFirst = "Archie",
                            AuthorLast = "Feil",
                            Description = "Velit occaecati aperiam voluptatem nihil minima qui. Qui provident in quis ut. Sed itaque soluta est sint eveniet ea et. Laudantium necessitatibus sequi.",
                            Title = "Profit-focused reciprocal task-force",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 21,
                            AuthorFirst = "Kelli",
                            AuthorLast = "Spencer",
                            Description = "Porro facilis voluptatem iste dolorem. Id et iste. Sed nostrum cupiditate nisi velit sint tempore quibusdam. Eum adipisci voluptatum velit illo aut vel pariatur aut.",
                            Title = "Devolved systemic neural-net",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 22,
                            AuthorFirst = "Elmer",
                            AuthorLast = "Green",
                            Description = "Autem ut ea beatae repudiandae natus nemo est et. Esse exercitationem architecto distinctio. Fuga odio sed sint quis. Asperiores optio labore ipsa ut iusto non omnis nobis voluptas. Et labore voluptatem et et. Dignissimos quibusdam corporis quo repellendus cupiditate.",
                            Title = "Face to face fresh-thinking methodology",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 23,
                            AuthorFirst = "Richard",
                            AuthorLast = "Legros",
                            Description = "In ut blanditiis et itaque. Dicta voluptatem voluptas et minima omnis aliquam. Tempore excepturi excepturi eos tenetur maiores sed quasi. Aut nesciunt esse dolorem.",
                            Title = "Cloned intermediate knowledge base",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 24,
                            AuthorFirst = "Derrick",
                            AuthorLast = "VonRueden",
                            Description = "Sapiente provident delectus. Odio commodi dolor magni ratione nulla. Quidem rerum sed esse nihil aut assumenda eveniet amet quaerat.",
                            Title = "Right-sized real-time help-desk",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 25,
                            AuthorFirst = "Grace",
                            AuthorLast = "Collier",
                            Description = "Quibusdam quis sunt architecto non nihil. Rem expedita ex quia aut facere est rerum voluptas asperiores. Vero assumenda animi iste sunt dignissimos sint sed. Et aut autem voluptatum enim totam.",
                            Title = "Vision-oriented human-resource definition",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 26,
                            AuthorFirst = "Kyle",
                            AuthorLast = "Carter",
                            Description = "Id eum soluta nam sunt rerum occaecati unde temporibus. Mollitia distinctio voluptatum soluta fuga. Dolore cupiditate aliquid voluptatem et aliquid dolor ut. Itaque qui qui.",
                            Title = "Profound neutral leverage",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 27,
                            AuthorFirst = "Judith",
                            AuthorLast = "Gutkowski",
                            Description = "Voluptas voluptatum minima voluptas rem. Non eos delectus iure nemo est amet vel. Commodi est reiciendis quae debitis praesentium pariatur. Magni rerum pariatur perspiciatis nemo harum vitae non expedita.",
                            Title = "Mandatory coherent success",
                            isAvailable = true
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
