// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RazorLibraryProject.Data;

#nullable disable

namespace RazorLibraryProject.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230216064756_LastShot")]
    partial class LastShot
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "f0b9ffaa-b532-49eb-8e36-267542542a9c",
                            Name = "admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "c38ec56e-09f7-48e1-9cbc-205aafcc33bc",
                            Name = "borrower",
                            NormalizedName = "BORROWER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "61cd5403-658f-42a0-bb30-297210bc1e12",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2f08202f-eb7b-4244-aaee-b05f2cdd1459",
                            Email = "borrower@library.net",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "borrower@library.net",
                            NormalizedUserName = "borrower@library.net",
                            PasswordHash = "AQAAAAIAAYagAAAAEPySGexLQYtwWWowZiUnve9UqkG874z767eT7tbRX3QOYdIwbRaob6TdyGyJxygpmg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9878aa2e-068f-49cf-a5c9-8c02d79f09a3",
                            TwoFactorEnabled = false,
                            UserName = "borrower@library.net"
                        },
                        new
                        {
                            Id = "019f9093-c805-4496-80c8-2a40346ee7f0",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a4a218a5-e7d5-41d4-94ad-d0a24b454873",
                            Email = "librarian@library.net",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "librarian@library.net",
                            NormalizedUserName = "librarian@library.net",
                            PasswordHash = "AQAAAAIAAYagAAAAEAhpFS/Pv1GRd9y7uxhf7GNwTpOm+AtHgMdALKiYcbO91Tf4OYkC8HNWp9nGiLwanw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "81c35152-b23f-4be7-96d0-b3c4bd2a7bab",
                            TwoFactorEnabled = false,
                            UserName = "librarian@library.net"
                        },
                        new
                        {
                            Id = "f82267dd-3453-44d8-a9b4-b82cc757fc80",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f1d95d26-d762-48da-8ed0-de490b5b7f0a",
                            Email = "jon_littel67@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEGQdRGT7VML3g1ZGl5a8qozxDusI2k+OxQXV636nej2kI0DmqkWDzjWFLlJgBy030Q==",
                            PhoneNumber = "847-640-8328 x0980",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b283d358-c65e-4daa-a3e3-93584281c18d",
                            TwoFactorEnabled = false,
                            UserName = "Jon_Littel67"
                        },
                        new
                        {
                            Id = "503214e4-8daa-429f-8c37-f3805639aeb7",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c5c20397-81e6-46a9-800c-0e66d61214ed",
                            Email = "patrick.breitenberg53@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEIY9k9sg0Y1WEpfPi6Wp1j/Hodnbc2wVgfOt7MwTXmsSXeL8q4cMMsFoJVnWmuOdwQ==",
                            PhoneNumber = "(694) 593-8258 x16725",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8057915f-2836-4105-b2e9-d26b9fa0bebd",
                            TwoFactorEnabled = false,
                            UserName = "Patrick.Breitenberg53"
                        },
                        new
                        {
                            Id = "39717a7f-7185-4e9f-a03c-28cc5a66da3e",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "91f9a8a1-ccdf-4478-b11f-8986d49d5258",
                            Email = "mathew12@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAED8K1j1tDqVYzUsiojmGijat96xRJZIe+6E5j6ITHa9TMEg/7LjCIv5iiI6BM0eszQ==",
                            PhoneNumber = "626-865-6466 x63664",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "44f348c9-cc41-462d-a6d6-f10b582d38de",
                            TwoFactorEnabled = false,
                            UserName = "Mathew12"
                        },
                        new
                        {
                            Id = "8992c122-736f-48d7-acda-f2304252a767",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a220dc20-5201-4c21-a735-e4c5c590a30a",
                            Email = "dale72@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEKclPieEpD0n87lsx7J58wV+z6orCPqfNuDU/IOudSI7pSNwyEciI5ik9YZ+84uzhg==",
                            PhoneNumber = "588.337.8715 x83853",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "cdc84548-69c7-4099-9eac-387ad4bc6123",
                            TwoFactorEnabled = false,
                            UserName = "Dale72"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "61cd5403-658f-42a0-bb30-297210bc1e12",
                            RoleId = "c38ec56e-09f7-48e1-9cbc-205aafcc33bc"
                        },
                        new
                        {
                            UserId = "019f9093-c805-4496-80c8-2a40346ee7f0",
                            RoleId = "f0b9ffaa-b532-49eb-8e36-267542542a9c"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("RazorLibraryProject.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AuthorFirst")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthorLast")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isAvailable")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Book");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorFirst = "Rachel",
                            AuthorLast = "Gutmann",
                            Description = "Laboriosam et atque labore qui aliquam rem. Suscipit optio incidunt sunt. Magnam rerum in illum vel eveniet nisi. Nulla aut deleniti non accusantium omnis perspiciatis iusto enim consequatur. Sapiente vel odit molestiae numquam.",
                            Title = "Extended tangible workforce",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 2,
                            AuthorFirst = "Stephanie",
                            AuthorLast = "Lubowitz",
                            Description = "Harum laudantium voluptas nobis eum odit sunt. Minus necessitatibus nesciunt corrupti odit rerum. Corrupti cum et quam doloremque aliquam in vitae minus dolore. Illo nesciunt dolor est quae in nam aliquam. Adipisci eos et voluptate corporis aspernatur quod suscipit.",
                            Title = "Object-based local implementation",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 3,
                            AuthorFirst = "Nicolas",
                            AuthorLast = "Kris",
                            Description = "Quis enim alias ut officiis amet aut vero quos omnis. Autem distinctio temporibus. Velit eveniet natus praesentium aut corrupti ut a odio blanditiis. Optio cumque rerum reiciendis tenetur atque nam sed. Harum sint iure eligendi reprehenderit est. Animi laudantium doloremque cum quasi illum deserunt et fugiat.",
                            Title = "Innovative needs-based pricing structure",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 4,
                            AuthorFirst = "Sylvester",
                            AuthorLast = "Conn",
                            Description = "Maiores delectus nam fuga aut aperiam. Repellat quia rerum debitis aut doloribus a fugit voluptatum. Minus voluptatem quia ut. Sed rem in perspiciatis. Saepe optio hic saepe aut pariatur velit ut.",
                            Title = "Polarised multi-state middleware",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 5,
                            AuthorFirst = "Randal",
                            AuthorLast = "Bartell",
                            Description = "Asperiores dolores nemo. Facere est minus aut qui fugiat sit aut. Saepe provident qui. Enim at quod optio perspiciatis ut nesciunt totam libero. Eos omnis amet eaque veritatis necessitatibus. Perferendis quos laboriosam et velit accusantium sit.",
                            Title = "Customizable heuristic emulation",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 6,
                            AuthorFirst = "Mabel",
                            AuthorLast = "Carter",
                            Description = "Fugit aliquid non ex laboriosam ut dignissimos earum natus. Sint ea praesentium quia laborum et natus qui. Est repellendus modi dolores dolorem laboriosam qui non.",
                            Title = "De-engineered attitude-oriented process improvement",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 7,
                            AuthorFirst = "Terry",
                            AuthorLast = "Abshire",
                            Description = "Et neque tempore dolorum error velit reiciendis. Sint magni vel. Temporibus fugiat sed occaecati et iusto aut rerum sed non.",
                            Title = "Re-contextualized dedicated flexibility",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 8,
                            AuthorFirst = "Paul",
                            AuthorLast = "Lang",
                            Description = "Dolores qui molestiae nostrum sint ipsum odio reiciendis delectus illum. Nobis qui doloremque neque labore sed repellat et pariatur eaque. Magnam est dolor doloribus eos. Quo qui est veniam necessitatibus accusamus quam. Accusamus voluptas beatae eveniet optio omnis quis suscipit. Qui quia corporis quasi nihil enim explicabo.",
                            Title = "Polarised leading edge infrastructure",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 9,
                            AuthorFirst = "Gayle",
                            AuthorLast = "Schowalter",
                            Description = "Et rerum provident pariatur minima a non ad nesciunt. Enim laudantium omnis fugit. Aut incidunt assumenda quisquam inventore totam ratione quo.",
                            Title = "Automated clear-thinking framework",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 10,
                            AuthorFirst = "Wm",
                            AuthorLast = "Feil",
                            Description = "Aut quae voluptatem in exercitationem ut eum et quisquam. Et nemo laborum laboriosam aliquid. Et sint quod laboriosam dolorem. Vero et laboriosam tempore minus quasi voluptates. Nostrum rerum dignissimos voluptate quo quas iure. Et temporibus velit exercitationem sunt animi.",
                            Title = "Monitored object-oriented protocol",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 11,
                            AuthorFirst = "Lynn",
                            AuthorLast = "Pfannerstill",
                            Description = "Cum officia eos. Exercitationem itaque eveniet incidunt explicabo. Sit amet illo dolorem.",
                            Title = "Organic solution-oriented standardization",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 12,
                            AuthorFirst = "Angelo",
                            AuthorLast = "Reichel",
                            Description = "Quos ad nesciunt quia aut incidunt asperiores. Porro numquam ea excepturi officia soluta. Exercitationem et fuga hic aut temporibus. Harum consectetur fugiat nobis totam. Dignissimos quos temporibus nihil.",
                            Title = "Reactive encompassing implementation",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 13,
                            AuthorFirst = "Emilio",
                            AuthorLast = "Roob",
                            Description = "Officiis aperiam nihil nemo atque dolore quo corporis et. Ea in eum dolor dolorem. Ex ut rerum quo et rem ducimus illum et.",
                            Title = "Multi-lateral intermediate groupware",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 14,
                            AuthorFirst = "Jared",
                            AuthorLast = "Murazik",
                            Description = "Recusandae corrupti beatae et doloribus aliquam pariatur. Iure mollitia est molestiae cupiditate. Non aut aut sed.",
                            Title = "Switchable needs-based groupware",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 15,
                            AuthorFirst = "Tony",
                            AuthorLast = "Dare",
                            Description = "Aut nesciunt sit vero pariatur beatae modi. Qui deserunt reprehenderit et et enim aut qui quia. Officia qui qui aspernatur asperiores.",
                            Title = "Cross-group global encoding",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 16,
                            AuthorFirst = "Ann",
                            AuthorLast = "Armstrong",
                            Description = "Velit ut laborum iusto quae rerum eligendi id. Sequi pariatur consectetur unde. Optio beatae veritatis adipisci aut voluptatem pariatur totam soluta. Quod sapiente saepe consequatur beatae rem sit maxime repellendus.",
                            Title = "Cloned holistic solution",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 17,
                            AuthorFirst = "Rex",
                            AuthorLast = "Mueller",
                            Description = "Atque id sit qui doloribus. Asperiores accusantium ut vel non eos. Officiis voluptas voluptate dolores delectus. Vitae id accusantium sit in distinctio fuga sed dolorem. Dolorem fugiat tempora dolore est.",
                            Title = "Assimilated static secured line",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 18,
                            AuthorFirst = "Desiree",
                            AuthorLast = "Abernathy",
                            Description = "Maiores fuga porro et facilis earum ut beatae voluptas quae. Nulla dignissimos aut eum consectetur tempore alias temporibus et. In dolor atque dolorum id.",
                            Title = "Upgradable zero tolerance migration",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 19,
                            AuthorFirst = "Edward",
                            AuthorLast = "Lakin",
                            Description = "Explicabo aut nam doloremque atque quaerat ipsa sunt non ut. Mollitia quia iusto sed. Exercitationem incidunt mollitia assumenda minima molestiae commodi voluptatem voluptatum nesciunt.",
                            Title = "Enhanced upward-trending website",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 20,
                            AuthorFirst = "Guadalupe",
                            AuthorLast = "Dickinson",
                            Description = "Eum nihil quibusdam natus modi dolorem quisquam eveniet. Asperiores rerum dolor ratione dignissimos expedita consequatur numquam alias. Aliquam culpa sit aut ut quidem et et.",
                            Title = "Cross-group logistical extranet",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 21,
                            AuthorFirst = "Lorena",
                            AuthorLast = "Hills",
                            Description = "Aut harum odit provident quia ullam molestiae nemo. Non quo sit sint. Et dolor at doloremque non vel qui. Molestiae fugiat minus. Nostrum quis aliquam atque et explicabo qui qui.",
                            Title = "Organized directional interface",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 22,
                            AuthorFirst = "Jonathon",
                            AuthorLast = "Jacobi",
                            Description = "Nisi laudantium ducimus dicta temporibus delectus itaque aut ut nisi. Sunt eos molestiae et rem at ipsam et. Velit dolor est eveniet rem recusandae repellat et.",
                            Title = "Team-oriented executive solution",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 23,
                            AuthorFirst = "Holly",
                            AuthorLast = "Wyman",
                            Description = "Fugiat quam hic nisi nihil laborum et. Omnis omnis dignissimos quibusdam vel quae. Ut aliquam corporis unde exercitationem. In voluptatem fugiat.",
                            Title = "Total high-level secured line",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 24,
                            AuthorFirst = "Terri",
                            AuthorLast = "Roberts",
                            Description = "Animi natus et velit ut harum. Vel rerum nihil cupiditate minima. Deleniti accusantium delectus esse aut voluptatum velit dicta voluptatum dolores. Aspernatur saepe cumque excepturi animi nemo rerum. Non maiores veniam dignissimos sed soluta tempora quo. Aut ducimus maiores molestias qui.",
                            Title = "Multi-lateral solution-oriented conglomeration",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 25,
                            AuthorFirst = "Dora",
                            AuthorLast = "VonRueden",
                            Description = "Est exercitationem suscipit accusamus alias fugit molestias rerum modi. Possimus dolorem nihil facere maxime. Voluptatem dolorem ex et voluptas possimus quam rerum libero nulla. Eaque illum quasi facilis optio nihil.",
                            Title = "User-friendly maximized internet solution",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 26,
                            AuthorFirst = "Claude",
                            AuthorLast = "Keebler",
                            Description = "Sunt at ipsam quo sed nisi facilis et voluptatem. Ut voluptatem vitae et sed aut est et aliquam dignissimos. Corporis illo et sapiente enim nihil architecto iure autem.",
                            Title = "Advanced coherent knowledge user",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 27,
                            AuthorFirst = "Enrique",
                            AuthorLast = "Nikolaus",
                            Description = "Id minus id non et eos in labore et tempora. Rerum enim aut aut provident ipsum explicabo consectetur. Sed esse dolor. Porro tenetur ratione aut consequatur. Aperiam aperiam veniam delectus omnis rerum quae vero natus deserunt. Error beatae autem est eum ea.",
                            Title = "Innovative impactful knowledge user",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 28,
                            AuthorFirst = "Bessie",
                            AuthorLast = "Jones",
                            Description = "Nemo et est itaque voluptatem quia voluptas beatae error. Adipisci quis quo dicta quo ea architecto est harum commodi. Perspiciatis dolores ut voluptatem velit deleniti nesciunt magni. Numquam dolorem quisquam quo ea odit eos sit. Inventore minima tenetur ea itaque harum. Esse sapiente dolor.",
                            Title = "Virtual reciprocal hardware",
                            isAvailable = false
                        });
                });

            modelBuilder.Entity("RazorLibraryProject.Models.LibraryAccount", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("roleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("userId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.HasIndex("roleId");

                    b.HasIndex("userId");

                    b.ToTable("LibraryAccount");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RazorLibraryProject.Models.LibraryAccount", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", "role")
                        .WithMany()
                        .HasForeignKey("roleId");

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "user")
                        .WithMany()
                        .HasForeignKey("userId");

                    b.Navigation("role");

                    b.Navigation("user");
                });
#pragma warning restore 612, 618
        }
    }
}
