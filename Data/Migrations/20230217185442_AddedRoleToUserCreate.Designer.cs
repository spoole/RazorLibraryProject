// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RazorLibraryProject.Data;

#nullable disable

namespace RazorLibraryProject.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230217185442_AddedRoleToUserCreate")]
    partial class AddedRoleToUserCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "35cb49a4-8020-4a0a-bce9-62b65b4cec6c",
                            Name = "admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "ac3d16af-cc17-454b-b9ee-97ace89400c7",
                            Name = "borrower",
                            NormalizedName = "BORROWER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "ed10d758-5209-4add-a1ad-5c569384933a",
                            RoleId = "ac3d16af-cc17-454b-b9ee-97ace89400c7"
                        },
                        new
                        {
                            UserId = "7689312d-f4d2-4b50-9d2c-572b546c79ef",
                            RoleId = "35cb49a4-8020-4a0a-bce9-62b65b4cec6c"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("RazorLibraryProject.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AuthorFirst")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthorLast")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isAvailable")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Book");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorFirst = "Rafael",
                            AuthorLast = "Abbott",
                            Description = "Rerum sed in soluta aut. Et laborum perferendis nihil quia qui corrupti qui exercitationem id. Sint sit nihil. Laudantium quaerat aut voluptatem dolore quae harum et.",
                            Title = "Enhanced national extranet",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 2,
                            AuthorFirst = "Erik",
                            AuthorLast = "Bernhard",
                            Description = "Nisi consectetur rerum et sunt. Ea ratione nesciunt consequatur. Enim molestias quisquam eum. Voluptas eum sed quaerat consequatur molestiae sit. Ut repellat veritatis et.",
                            Title = "Multi-tiered composite algorithm",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 3,
                            AuthorFirst = "Cary",
                            AuthorLast = "Turcotte",
                            Description = "Distinctio voluptatem beatae enim in ducimus laborum sint quia velit. Magni omnis odio autem. Repudiandae harum tempora quas sed totam minima vel tenetur. Ea corporis eos quidem adipisci quia veritatis nemo illo qui. Recusandae molestiae atque.",
                            Title = "Focused 3rd generation implementation",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 4,
                            AuthorFirst = "Clay",
                            AuthorLast = "Olson",
                            Description = "Reiciendis rem nesciunt pariatur et et eaque praesentium ullam. Velit eos debitis labore quas nihil consequatur laborum aut eos. Qui dicta sed quae ea molestias alias saepe atque rerum. Possimus quia aut saepe omnis. Facilis laboriosam dolorem.",
                            Title = "Function-based content-based archive",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 5,
                            AuthorFirst = "Gary",
                            AuthorLast = "Quigley",
                            Description = "Modi exercitationem quos voluptatem fugit. Voluptas pariatur quae. Aspernatur quidem dolores et dicta enim.",
                            Title = "Enhanced fresh-thinking open system",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 6,
                            AuthorFirst = "Betty",
                            AuthorLast = "Rice",
                            Description = "Sapiente ducimus provident placeat delectus labore. Voluptas id nesciunt consequatur reiciendis harum est. Vel dolorum ab eveniet et cum vel corrupti modi. Non possimus sunt voluptatum velit possimus quisquam a qui. Nesciunt aliquam eius tempore dignissimos id quia dolores maiores. Possimus alias eum porro dicta ea totam voluptas et.",
                            Title = "Polarised 5th generation concept",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 7,
                            AuthorFirst = "Jonathon",
                            AuthorLast = "Turcotte",
                            Description = "Rerum quidem voluptatem nam est laudantium magni architecto deserunt tempora. Amet qui et minima quae accusamus molestiae. Perferendis et et sint accusamus dolore quis totam voluptas aut. Fuga modi ut vel non id autem et enim sit. Aut vero unde.",
                            Title = "Team-oriented coherent encryption",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 8,
                            AuthorFirst = "Jacqueline",
                            AuthorLast = "Little",
                            Description = "Nostrum dicta iusto a voluptatum labore. Culpa voluptatem commodi illo nihil. Voluptas et totam maxime accusamus. Accusamus beatae qui et et. Ea incidunt illum et dolor velit.",
                            Title = "Team-oriented global initiative",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 9,
                            AuthorFirst = "Ron",
                            AuthorLast = "Batz",
                            Description = "Vitae sunt recusandae alias. Fugit eos alias. Aut pariatur dolore eos velit optio voluptas vero dolor similique. Aspernatur consequuntur quia consectetur. Aut dolorem vel et perferendis accusamus culpa qui ut. Atque dolorem nobis rerum animi.",
                            Title = "Innovative even-keeled service-desk",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 10,
                            AuthorFirst = "Jared",
                            AuthorLast = "Kshlerin",
                            Description = "Autem distinctio at praesentium tempora nihil. Optio cupiditate omnis est. Est omnis fugit odio dolor.",
                            Title = "Optional intermediate software",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 11,
                            AuthorFirst = "Jeremy",
                            AuthorLast = "Cole",
                            Description = "Dolor aut quibusdam eum eligendi modi. Placeat ut iusto ea. Soluta quas veritatis dolorem. Quo incidunt esse necessitatibus officiis molestiae quidem id ut.",
                            Title = "Future-proofed directional forecast",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 12,
                            AuthorFirst = "Lucia",
                            AuthorLast = "Torphy",
                            Description = "Iusto ex a et ducimus qui nihil sit consectetur. Unde odio dolor quas est et qui enim. Eaque eos culpa doloremque. Quia voluptate fugiat nihil ut dolore impedit non et. Distinctio nobis fugit. Reprehenderit quasi repudiandae nisi libero est nesciunt.",
                            Title = "Stand-alone system-worthy process improvement",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 13,
                            AuthorFirst = "Cory",
                            AuthorLast = "Bruen",
                            Description = "Sit a qui. Veritatis itaque distinctio quibusdam rerum excepturi. Nesciunt ut sit minima cum eum cum omnis facere. Quas a quos sit optio expedita voluptas. Nihil sit minus est hic. Qui praesentium consequuntur quis nulla tempore aut quibusdam amet beatae.",
                            Title = "Virtual upward-trending algorithm",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 14,
                            AuthorFirst = "Jaime",
                            AuthorLast = "Orn",
                            Description = "Ut quidem esse ab delectus doloremque tempore tempore officiis et. Dolore ea consequatur. Voluptatum tenetur quam voluptas reprehenderit nemo sit.",
                            Title = "Optional interactive customer loyalty",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 15,
                            AuthorFirst = "Kay",
                            AuthorLast = "Dooley",
                            Description = "Nobis libero minima est est dolore minus pariatur et doloremque. Totam quaerat minus aperiam. Deleniti et facere rerum eos sunt ab quo alias maxime.",
                            Title = "Devolved interactive analyzer",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 16,
                            AuthorFirst = "Harriet",
                            AuthorLast = "Mante",
                            Description = "Placeat quis veniam odit perspiciatis et maxime. Ex veniam consequuntur. Velit quia dolorem deserunt dolores architecto quo qui quibusdam.",
                            Title = "Assimilated dedicated forecast",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 17,
                            AuthorFirst = "Morris",
                            AuthorLast = "Lang",
                            Description = "Labore porro quia perferendis. At labore dignissimos ex vero. Labore dolores natus sint suscipit et. Veniam quidem ab. Repudiandae explicabo sunt voluptas sed voluptas. Dolores temporibus sint dolorem unde odio numquam.",
                            Title = "Visionary asymmetric implementation",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 18,
                            AuthorFirst = "Julian",
                            AuthorLast = "Bashirian",
                            Description = "Rerum id autem autem aspernatur nemo eius ut quibusdam facere. Cum dolore ut delectus exercitationem numquam voluptatem labore. Quibusdam aut excepturi praesentium laboriosam doloremque. Magnam et tempore voluptatum dolor quia aut consequatur quibusdam.",
                            Title = "Compatible systemic projection",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 19,
                            AuthorFirst = "Rhonda",
                            AuthorLast = "Paucek",
                            Description = "Dolores voluptas dolore a corrupti tempore incidunt. Et nihil sequi praesentium ex veritatis harum aperiam mollitia. Impedit et repellat in sit. Et et quis molestias dicta quia assumenda et. Cupiditate delectus dolor et et. Quaerat temporibus nemo voluptas.",
                            Title = "Public-key regional hardware",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 20,
                            AuthorFirst = "Christie",
                            AuthorLast = "Moore",
                            Description = "Doloremque sit debitis magni officia ducimus omnis et qui. Tempora qui enim ut fugiat mollitia et accusantium. Perspiciatis repellendus natus.",
                            Title = "Function-based full-range initiative",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 21,
                            AuthorFirst = "Randy",
                            AuthorLast = "Bahringer",
                            Description = "Distinctio atque vitae et. Quia ipsam repellendus. Assumenda veritatis qui asperiores aperiam quo sit. Ut dolorem dicta aliquid omnis ut labore. Consequuntur repellat doloremque. Et deleniti suscipit repellat omnis et cum eius est.",
                            Title = "Persevering multimedia open architecture",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 22,
                            AuthorFirst = "Karla",
                            AuthorLast = "Hudson",
                            Description = "Dolores rerum quia quos perferendis eius voluptas dolor fuga vitae. Deleniti in sed aut sunt harum pariatur et. Minima adipisci quod. Eveniet molestiae et.",
                            Title = "Multi-layered mission-critical access",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 23,
                            AuthorFirst = "Kristi",
                            AuthorLast = "Anderson",
                            Description = "Molestiae qui aut excepturi eos voluptas voluptatem consequatur reiciendis. Ipsa deserunt quo voluptate at a in optio eveniet eligendi. Alias repellendus at aspernatur adipisci ab. Perferendis asperiores soluta. Repellendus fuga facilis in. Illo nostrum repellat consequatur dolores in distinctio alias.",
                            Title = "Ergonomic actuating intranet",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 24,
                            AuthorFirst = "Alice",
                            AuthorLast = "Ullrich",
                            Description = "Qui voluptatem natus placeat et cupiditate dolore aut ab officiis. Ea aliquid cupiditate distinctio maxime itaque dignissimos eveniet. Et aut assumenda.",
                            Title = "Organized directional attitude",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 25,
                            AuthorFirst = "Roosevelt",
                            AuthorLast = "Champlin",
                            Description = "Ratione repellendus aperiam minima magnam sapiente neque atque qui. Debitis voluptatem animi veritatis ut nisi et possimus a repudiandae. Esse architecto debitis fugit sit vero. Nulla quibusdam possimus accusamus iusto eos velit facere quisquam et. Et voluptate provident rerum cumque sed.",
                            Title = "Visionary attitude-oriented workforce",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 26,
                            AuthorFirst = "Tanya",
                            AuthorLast = "Grant",
                            Description = "Repellendus dolorum tenetur quo eligendi nobis autem nemo magni. Quo ad cumque necessitatibus debitis nihil qui. At illum dolor earum quaerat at.",
                            Title = "Profound solution-oriented standardization",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 27,
                            AuthorFirst = "Lance",
                            AuthorLast = "Nienow",
                            Description = "Numquam magnam quidem sit tempora. Necessitatibus id iusto blanditiis enim voluptatem ipsam soluta. Autem explicabo sapiente quis unde porro adipisci facere eveniet. Fugit accusamus quo earum porro officiis nulla ipsum.",
                            Title = "Versatile foreground collaboration",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 28,
                            AuthorFirst = "Kara",
                            AuthorLast = "Hagenes",
                            Description = "Velit adipisci et quia sequi laborum ut vel sint labore. Qui deleniti dolores. Error reiciendis alias totam.",
                            Title = "Profound interactive algorithm",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 29,
                            AuthorFirst = "Annie",
                            AuthorLast = "Roob",
                            Description = "Officia quam ut vitae velit maxime. Accusantium repellat impedit. Nemo porro autem esse qui sequi dolores pariatur fuga. Ut modi blanditiis quos praesentium. Cum quidem neque deserunt enim eius consequuntur voluptatem voluptas. Laudantium reprehenderit quasi occaecati nobis.",
                            Title = "Team-oriented next generation monitoring",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 30,
                            AuthorFirst = "Mercedes",
                            AuthorLast = "Brakus",
                            Description = "Explicabo incidunt fugit quidem mollitia consequuntur. Sit provident eveniet. Id at magni sit ut voluptatum. Et provident sed autem nobis eligendi sit doloribus dolorem ut.",
                            Title = "Streamlined analyzing synergy",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 31,
                            AuthorFirst = "Amanda",
                            AuthorLast = "Effertz",
                            Description = "Veniam est asperiores numquam ullam. Maxime eum magnam aut cupiditate adipisci blanditiis voluptas eos placeat. Et possimus quis. Laborum qui pariatur sint accusamus ut. Eius et sed fuga iure et sequi harum.",
                            Title = "Exclusive bottom-line emulation",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 32,
                            AuthorFirst = "Beverly",
                            AuthorLast = "Koss",
                            Description = "Quia quae ducimus. Et illum at fuga et. Corrupti dolor voluptas dignissimos repudiandae eum rerum distinctio. Ut consectetur a impedit consectetur optio at ut. Omnis et qui adipisci est praesentium.",
                            Title = "Monitored needs-based throughput",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 33,
                            AuthorFirst = "Myron",
                            AuthorLast = "Gottlieb",
                            Description = "Aut quos id laudantium omnis voluptas. Veniam doloremque odio sit et maxime inventore error eligendi. Et ad non perspiciatis qui officiis cumque. Earum fugit quo aut cum est quia omnis qui et.",
                            Title = "Ameliorated executive attitude",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 34,
                            AuthorFirst = "Violet",
                            AuthorLast = "Hyatt",
                            Description = "Et officia error aut unde dolor. Officia eius illo laudantium non nulla praesentium. Laborum nesciunt sapiente totam molestiae sit mollitia veritatis. Dolor fuga voluptatum minima rerum eius est ad libero consequatur.",
                            Title = "Centralized asymmetric benchmark",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 35,
                            AuthorFirst = "Helen",
                            AuthorLast = "Bergnaum",
                            Description = "Est iste ut repudiandae enim qui et et neque saepe. Excepturi nisi qui explicabo quisquam. Recusandae est et dolores optio assumenda praesentium nihil aliquid.",
                            Title = "Universal responsive contingency",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 36,
                            AuthorFirst = "Charlene",
                            AuthorLast = "Greenholt",
                            Description = "Voluptatem at animi rerum minima doloremque adipisci. Repellendus quibusdam quia consequatur. Doloremque sit totam dolorum dignissimos itaque. Accusamus rem asperiores facilis ad enim est sunt saepe totam. Cumque eius quidem.",
                            Title = "Multi-channelled attitude-oriented open architecture",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 37,
                            AuthorFirst = "Larry",
                            AuthorLast = "Schuster",
                            Description = "In non aut in dolor nam occaecati voluptas sunt. Et at dolor. Ipsa esse autem illum. Incidunt consectetur explicabo impedit repellendus.",
                            Title = "User-friendly stable portal",
                            isAvailable = false
                        });
                });

            modelBuilder.Entity("RazorLibraryProject.Models.User", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasIndex("RoleId");

                    b.HasDiscriminator().HasValue("User");

                    b.HasData(
                        new
                        {
                            Id = "ed10d758-5209-4add-a1ad-5c569384933a",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ad42a1eb-32b4-4745-8343-010ae4039a15",
                            Email = "borrower@library.net",
                            EmailConfirmed = true,
                            LockoutEnabled = true,
                            NormalizedEmail = "borrower@library.net",
                            NormalizedUserName = "borrower@library.net",
                            PasswordHash = "AQAAAAIAAYagAAAAEO81Ucv4h+GT3oZPNcJ0MSuI4cMwCKTQ9D2UlyyQAbOfsQEjrCaIUK6JWULeABLOnQ==",
                            PhoneNumber = "",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "56f7a234-87d1-42c9-a3bb-a6d33e75da88",
                            TwoFactorEnabled = false,
                            UserName = "borrower@library.net"
                        },
                        new
                        {
                            Id = "7689312d-f4d2-4b50-9d2c-572b546c79ef",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3b5a80f8-0465-4f27-bc17-c9bc6cb27013",
                            Email = "librarian@library.net",
                            EmailConfirmed = true,
                            LockoutEnabled = true,
                            NormalizedEmail = "librarian@library.net",
                            NormalizedUserName = "librarian@library.net",
                            PasswordHash = "AQAAAAIAAYagAAAAEK24Dqy3dRxPX3JEwDTLEJb7Quw8liwHAazKXO08pENVJSn0dbLeXfkY7sYGcC5ykQ==",
                            PhoneNumber = "",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a3a30488-1a6a-4d16-9c31-6c9995680690",
                            TwoFactorEnabled = false,
                            UserName = "librarian@library.net"
                        },
                        new
                        {
                            Id = "9a55c850-9a75-4bbd-adf7-67e8b829dac2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "55e6b31a-035e-45ae-9d08-f5c39afa1fb8",
                            Email = "kenneth.stanton60@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "",
                            NormalizedUserName = "kenneth.stanton60",
                            PasswordHash = "AQAAAAIAAYagAAAAEMcETxlhTpkvfdBd8jWfjBHp0x6XUHMFNnX+vlukiFkGEX0TTc4pS0Qdan3hVOna1A==",
                            PhoneNumber = "1-659-534-8458 x4646",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a8daa67b-e2f1-4f86-b00b-686b10c200e1",
                            TwoFactorEnabled = false,
                            UserName = "Kenneth.Stanton60"
                        },
                        new
                        {
                            Id = "af9cfd29-1af4-4115-9358-8d692132556e",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "154ecdb1-8a3b-4fef-b726-80149411a533",
                            Email = "rene.mayert@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "",
                            NormalizedUserName = "rene.mayert",
                            PasswordHash = "AQAAAAIAAYagAAAAELajirFT5EnG3geEj2stSxMjTDa08prDQrZnfQSkgxHXB/RexRTVRHQ6JiLwq483wQ==",
                            PhoneNumber = "(722) 643-4828",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d66ea289-9fcf-47dd-a9c5-058d1432bff8",
                            TwoFactorEnabled = false,
                            UserName = "Rene.Mayert"
                        },
                        new
                        {
                            Id = "dfede864-d471-46bf-b494-55f6d05b3655",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "138ab0af-f111-4b9f-b732-86196a7e09b2",
                            Email = "kay70@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "",
                            NormalizedUserName = "kay70",
                            PasswordHash = "AQAAAAIAAYagAAAAEAXvBwkHM4j3dBmX0VjjyNRhENfoJQUOfU+N2SvC72PGrFkbjl0WbLZcddPnXLsLZw==",
                            PhoneNumber = "1-364-611-6889",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8ce8d293-6cf7-44f6-aee1-4513df2e8cdf",
                            TwoFactorEnabled = false,
                            UserName = "Kay70"
                        },
                        new
                        {
                            Id = "987ddf86-7e2f-41e1-b9c7-7ba2f72ef7a9",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b7309b1a-6398-4927-8fc1-48d5b0c9e63e",
                            Email = "jimmie51@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "",
                            NormalizedUserName = "jimmie51",
                            PasswordHash = "AQAAAAIAAYagAAAAEDZbs1xjxDcM3TWlYJhGSBW9FGd5enFMYTaQ1yOGfhEvNJ9TB7WN9ZcCmMt3eaKVdA==",
                            PhoneNumber = "1-669-268-7292",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8aab07b5-49f4-42b2-80a6-bc9199c4410e",
                            TwoFactorEnabled = false,
                            UserName = "Jimmie51"
                        },
                        new
                        {
                            Id = "be1a89d6-c513-4621-8f46-581716a0e2d6",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1af155db-39fb-44bf-b5a9-e4e978010d3b",
                            Email = "clayton.schulist93@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "",
                            NormalizedUserName = "clayton.schulist93",
                            PasswordHash = "AQAAAAIAAYagAAAAECyQQbUq2PKv0QaZSXGzZROQjPya1o9VMHNNzUVfW0vbxSyJgiz1df9eXqA1iptsiw==",
                            PhoneNumber = "917.815.0255 x8673",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "80424c98-1d30-40b1-b8d7-29885396afb4",
                            TwoFactorEnabled = false,
                            UserName = "Clayton.Schulist93"
                        },
                        new
                        {
                            Id = "7a10c760-0a02-4843-bd9f-3b14cf5702ad",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "91739ebf-c2eb-4303-ab14-81bc902c38ea",
                            Email = "patrick.schmitt@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "",
                            NormalizedUserName = "patrick.schmitt",
                            PasswordHash = "AQAAAAIAAYagAAAAEBNkvoDz43ByBPqqlUCbmVb9scawl0cCIU/yDYbItjXuWyEZ3rMwFvjAKlpKinA6Fw==",
                            PhoneNumber = "938-369-6272 x219",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "312032dd-0c0c-4683-bd71-0e3b7496b1ce",
                            TwoFactorEnabled = false,
                            UserName = "Patrick.Schmitt"
                        },
                        new
                        {
                            Id = "03ff21c8-145e-4829-9207-72946cae4151",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "48718c27-926d-40a7-8f00-cf4886cab126",
                            Email = "irma_cummerata@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "",
                            NormalizedUserName = "irma_cummerata",
                            PasswordHash = "AQAAAAIAAYagAAAAEGv02S8qTCuBqEg8HEHJZ/NxheJifjuA8JAz8Ko5c5CUeFqbzDGTfMAwGhKV+fP83w==",
                            PhoneNumber = "731-246-0362 x9408",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ca5046cc-73cf-4552-a3ea-b7db1807690c",
                            TwoFactorEnabled = false,
                            UserName = "Irma_Cummerata"
                        },
                        new
                        {
                            Id = "f03960a4-5986-4a00-9c2d-55d545bfa5f7",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "aabba045-a0e7-47ff-911e-b2365807621c",
                            Email = "sheri_schinner97@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "",
                            NormalizedUserName = "sheri_schinner97",
                            PasswordHash = "AQAAAAIAAYagAAAAECUlLmthFuJfpg8rS20IXPqHqb01zfQhu/M8yE/eVix+ryaJlxl9WNA2emXWANoJdg==",
                            PhoneNumber = "921.558.4300 x53430",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8a4e7a37-cdfb-48e2-808e-47a993f49b60",
                            TwoFactorEnabled = false,
                            UserName = "Sheri_Schinner97"
                        },
                        new
                        {
                            Id = "ec62701f-cb92-4204-97e6-461ac20c0608",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "60b032b0-cc79-4f17-99e7-cc136f397e2b",
                            Email = "duane99@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "",
                            NormalizedUserName = "duane99",
                            PasswordHash = "AQAAAAIAAYagAAAAEB4s6PuWj6CNzKw8pLEUtWcrswexhtu4LKoMCuF4f1xIjiuy37sWuh+/ttkanrczXw==",
                            PhoneNumber = "(235) 316-2005 x78757",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1929ccbb-2b86-41d0-8981-ccc571201bd4",
                            TwoFactorEnabled = false,
                            UserName = "Duane99"
                        },
                        new
                        {
                            Id = "1d0621cc-905b-40e0-bbdc-586ecfd6202b",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4a2bece3-0fca-46ee-a521-c95d4574b8ca",
                            Email = "michelle_hand@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "",
                            NormalizedUserName = "michelle_hand",
                            PasswordHash = "AQAAAAIAAYagAAAAENLVUor/8QdWziYVxDIC7E7jIAM7C7ad9ulc9MK+UqGGgjT3F0kDmk6G8e9IkJdH4g==",
                            PhoneNumber = "1-618-876-8027",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ecc77b36-37ac-429c-a715-39cf5a4ef6a9",
                            TwoFactorEnabled = false,
                            UserName = "Michelle_Hand"
                        },
                        new
                        {
                            Id = "ff34a9b0-6fa0-44fa-927f-a545387416dd",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8aa6e532-0523-4637-92bc-1a81c6245545",
                            Email = "vickie.schmeler@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "",
                            NormalizedUserName = "vickie.schmeler",
                            PasswordHash = "AQAAAAIAAYagAAAAEMSC+sb3DDiQ8JCxzjRKZEuMmqhpEyLHiY6aJk5sHpsGm03UN15MsFZVEemWRKxc6Q==",
                            PhoneNumber = "336.893.8710",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "803e610d-1a65-4fbb-83d5-0ede5b46405a",
                            TwoFactorEnabled = false,
                            UserName = "Vickie.Schmeler"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RazorLibraryProject.Models.User", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
