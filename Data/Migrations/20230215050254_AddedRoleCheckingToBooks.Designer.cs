// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RazorLibraryProject.Data;

#nullable disable

namespace RazorLibraryProject.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230215050254_AddedRoleCheckingToBooks")]
    partial class AddedRoleCheckingToBooks
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "7c1d45f0-eca2-491f-8a94-e065704cd367",
                            Name = "admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "e4dbd695-01f4-4716-bb73-0057112f6e73",
                            Name = "borrower",
                            NormalizedName = "BORROWER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "27adeb07-a51f-4290-a04e-c04ed91609a3",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "56437e87-0cc9-4cb2-9afb-4de3eb105f7a",
                            Email = "borrower@library.net",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "borrower@library.net",
                            NormalizedUserName = "borrower@library.net",
                            PasswordHash = "AQAAAAIAAYagAAAAEH1YgcvWDo5uYW7Ga8FJ8dyvY93I7LD3M3zNLaiheMS8ZeQcjLC5Eam52i4MhdI44A==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e12b2d9e-7776-4768-894e-17a4fb7f90dd",
                            TwoFactorEnabled = false,
                            UserName = "borrower@library.net"
                        },
                        new
                        {
                            Id = "1bd8d454-d22c-4b50-9b37-3cc3a3864617",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e52158e2-e675-48c8-a41c-fed4641f6463",
                            Email = "librarian@library.net",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "librarian@library.net",
                            NormalizedUserName = "librarian@library.net",
                            PasswordHash = "AQAAAAIAAYagAAAAEB2o6ROFqgDrQGXMS9vPjDS5/wP+DB7NMmdBlSxyVTJOaF10+41YoiLZdMiJjzMGtQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6ba456d8-8144-4e8f-9e5f-0cf388575c17",
                            TwoFactorEnabled = false,
                            UserName = "librarian@library.net"
                        },
                        new
                        {
                            Id = "4ae45f19-31e7-4390-a0fc-6224ffef484c",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d47ac385-01ff-49c3-bd5c-7909f9c7f024",
                            Email = "patsy58@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAENFDn7YuWs0QBPnJlMukqmoo49YGn4LMdgcnbvfmqoGR93a3RbBArFYE5ZOlPWb7dQ==",
                            PhoneNumber = "996-319-3298 x54630",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ecb1418c-c6a1-4859-97b7-fc446a0d63db",
                            TwoFactorEnabled = false,
                            UserName = "Patsy58"
                        },
                        new
                        {
                            Id = "86bcb811-db0f-4d30-b1d1-de81811ea683",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3f6dec83-0211-438c-bf58-cb75dfb4a3fd",
                            Email = "antonio99@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEJM3HhYCKqeIO/ycTsdS5+5wctbbeccgzgQfuZLq31nZR+Ey439Z3i7OGwHBeFh0eQ==",
                            PhoneNumber = "705-407-6647 x735",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "acb3e117-211d-4465-b3d5-cf5c91def5f1",
                            TwoFactorEnabled = false,
                            UserName = "Antonio99"
                        },
                        new
                        {
                            Id = "9baa8ab8-b51e-4cc0-a7b6-f13605ba515b",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "565f9150-b5e9-48f8-a465-9e6082decf6b",
                            Email = "hannah2@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAELiQJsMqdyi/daDYh69Buhnzmmi3FF3FOV2Vm4mi7oZXdVYj1IWUu2TbXiNVkJIYDw==",
                            PhoneNumber = "607.207.4824",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f5579e1e-8e65-45c7-b8c4-267c06a5911f",
                            TwoFactorEnabled = false,
                            UserName = "Hannah2"
                        },
                        new
                        {
                            Id = "e241d7b8-cf3c-407a-9507-0ddab8eae918",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1aec8164-d503-4c6b-aa5d-2cd08dfef963",
                            Email = "dean_rosenbaum@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEItWD4nyW3xrO24Jpcjjzkt3uadAJ06saVffWgEKEenVko1uNRxHcjkueNdzVvDaIg==",
                            PhoneNumber = "(468) 980-7134",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3c5993f4-7f71-4afa-b2c2-ec5317641a56",
                            TwoFactorEnabled = false,
                            UserName = "Dean_Rosenbaum"
                        },
                        new
                        {
                            Id = "0fca11d3-ead1-419d-a59f-ce4ff615af7c",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "77572a50-e9c4-4d6c-9ea1-de63e436f4e7",
                            Email = "gerald99@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAENtP6YXBR6EcPg7EOICdxlWB6MtSYn7UxiafUAQivuV6lFTU+R1Wu65YmGZ8WBA70Q==",
                            PhoneNumber = "666-409-3591",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8fbcd84c-7339-4777-9b76-d6902903be94",
                            TwoFactorEnabled = false,
                            UserName = "Gerald99"
                        },
                        new
                        {
                            Id = "3394481a-d38b-458a-ab80-bdb7a64e7bcc",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f7241e31-f256-4395-9e84-2601a077dfd4",
                            Email = "luther94@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEH6XWh2jVx0zA7fhfNXvqreYeTM1VxGRhAP6eMiBhixwchLOYmzhb8rsVkUaUjcKaA==",
                            PhoneNumber = "318.390.2718",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0d118ef9-9d9f-4347-b178-409e24a9ab94",
                            TwoFactorEnabled = false,
                            UserName = "Luther94"
                        },
                        new
                        {
                            Id = "eafed0ab-2f68-4763-af72-82f50420c0a9",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "75c0907a-c112-434a-8c1d-05c56e851c29",
                            Email = "elena.keeling@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEGREnHpmhwBhZCOdWnhO7AfFMSspCL8n8GlM2GD2o+mYaEdIaWMd/3CH8Gwg1/cUdA==",
                            PhoneNumber = "1-712-446-3128",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "adcd6527-11ae-49b8-b1f7-aa46e496b595",
                            TwoFactorEnabled = false,
                            UserName = "Elena.Keeling"
                        },
                        new
                        {
                            Id = "46f07709-4a2a-4dbd-b173-605062411a6f",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5ac23dce-9698-430e-903a-7fb25be717cd",
                            Email = "lucia.hilll98@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEBcwiQ2e5k/fwmg951en+AOeukT72YMh5/j46TgHPZsO+Ab+8i/tLGmscEVpc2gQyw==",
                            PhoneNumber = "1-211-263-1985 x946",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e2f5c0b1-29cf-4c5a-b752-853ffb2e4ce4",
                            TwoFactorEnabled = false,
                            UserName = "Lucia.Hilll98"
                        },
                        new
                        {
                            Id = "167e5850-b8ad-4977-ac59-e0e66935f657",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1fd9fd78-1144-4dad-abf9-608b48a062d8",
                            Email = "frank41@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEF7CVHroSU4yFkxp/OoF9d7r3kypzE62EPPMDFu4LPtP5fujP6ogmDucQfI7YxqnpQ==",
                            PhoneNumber = "(703) 821-2321",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6efcaa9d-d574-4e8f-9cb0-6431e0aab662",
                            TwoFactorEnabled = false,
                            UserName = "Frank41"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "27adeb07-a51f-4290-a04e-c04ed91609a3",
                            RoleId = "e4dbd695-01f4-4716-bb73-0057112f6e73"
                        },
                        new
                        {
                            UserId = "1bd8d454-d22c-4b50-9b37-3cc3a3864617",
                            RoleId = "7c1d45f0-eca2-491f-8a94-e065704cd367"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("RazorLibraryProject.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AuthorFirst")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthorLast")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isAvailable")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Book");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorFirst = "Christie",
                            AuthorLast = "Ferry",
                            Description = "Aliquam optio qui. Facere quis mollitia et voluptatem et id. Accusamus officiis dignissimos enim quod omnis. Ut quis quia id.",
                            Title = "Multi-layered global framework",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 2,
                            AuthorFirst = "Marvin",
                            AuthorLast = "Herman",
                            Description = "Officia quae alias ut quam officia est et. Quibusdam reprehenderit dolorum illo suscipit mollitia ut et. Nihil repellendus deserunt quaerat. Dolore debitis id magnam quidem aut odio magni nostrum et.",
                            Title = "Seamless multi-tasking knowledge user",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 3,
                            AuthorFirst = "Jared",
                            AuthorLast = "Hermann",
                            Description = "Quis rerum enim incidunt officia modi quia sit occaecati. Ipsa error quo a id reprehenderit itaque ut ut. Sunt cupiditate et harum sit tempora.",
                            Title = "Seamless value-added encryption",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 4,
                            AuthorFirst = "Glenn",
                            AuthorLast = "Roberts",
                            Description = "Voluptates fugiat quibusdam sed et dolorem temporibus sint itaque. Aut esse pariatur aut impedit vel dicta iure. Temporibus veritatis quam est aut tempore tenetur velit. Voluptatum occaecati adipisci dicta magni dolore et facilis. Iusto magni perferendis optio harum porro delectus reprehenderit. Esse voluptate eos deleniti quia qui.",
                            Title = "Networked secondary support",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 5,
                            AuthorFirst = "Phillip",
                            AuthorLast = "Ferry",
                            Description = "Eveniet qui maxime aspernatur explicabo excepturi est maxime velit. Eum qui laudantium doloremque itaque dolorem et doloremque distinctio quam. Error nemo aut commodi cumque molestias consectetur ipsa. Ut vero nisi totam qui quasi qui. Laborum molestiae aspernatur.",
                            Title = "Customer-focused client-server workforce",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 6,
                            AuthorFirst = "Anne",
                            AuthorLast = "Boyer",
                            Description = "Aut repudiandae natus nihil minima sunt eveniet debitis. Sed corporis et rem aliquam. Praesentium maiores nemo quo dolores temporibus corrupti. Rerum unde pariatur voluptas expedita esse aperiam tempore.",
                            Title = "Grass-roots foreground product",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 7,
                            AuthorFirst = "Rosa",
                            AuthorLast = "Herzog",
                            Description = "Qui ad et est illum. Quis reprehenderit dicta ratione. Aut rerum omnis perspiciatis dolorum expedita. Aut tenetur sed magnam odit quo asperiores ut ad ipsam. Quas est voluptatum placeat ut quia sunt corrupti est. Est qui similique quaerat occaecati voluptatum occaecati non voluptatem sapiente.",
                            Title = "Persistent bifurcated focus group",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 8,
                            AuthorFirst = "Rachel",
                            AuthorLast = "Medhurst",
                            Description = "Tenetur qui laudantium itaque. Aspernatur et voluptas earum qui consectetur suscipit. Labore quidem non.",
                            Title = "Optional high-level encoding",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 9,
                            AuthorFirst = "Henrietta",
                            AuthorLast = "Casper",
                            Description = "Optio ut perspiciatis veritatis eos voluptates. Porro blanditiis molestiae sunt et quia. Eius ab est consequatur non pariatur. Voluptas sit eveniet hic. Nihil omnis ad inventore. Qui qui libero non repudiandae id aspernatur excepturi.",
                            Title = "Optimized empowering model",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 10,
                            AuthorFirst = "Alice",
                            AuthorLast = "Dicki",
                            Description = "Consequuntur sint voluptatem id. Necessitatibus commodi eveniet eum ullam numquam omnis. Maiores repellendus debitis minus molestiae hic error consequatur eaque eum. Possimus autem suscipit sed incidunt qui dicta pariatur dolores eos. Impedit quis quia.",
                            Title = "Adaptive grid-enabled initiative",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 11,
                            AuthorFirst = "Judy",
                            AuthorLast = "Hodkiewicz",
                            Description = "Quaerat commodi consequatur dolorem autem rem maiores sed et aut. Et aperiam culpa odit ut eaque culpa. At rem accusantium quam aut in eaque dolorem enim id. Totam et eveniet nesciunt consectetur et suscipit necessitatibus. Molestiae dignissimos tempore accusamus repudiandae et voluptatem consequatur.",
                            Title = "Devolved optimal installation",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 12,
                            AuthorFirst = "Claire",
                            AuthorLast = "Anderson",
                            Description = "Laudantium doloribus molestiae at magnam dolor. Numquam doloremque error alias fuga et. Recusandae earum illum laboriosam expedita aut voluptatum repudiandae. Et officia est beatae odio temporibus.",
                            Title = "Function-based dedicated core",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 13,
                            AuthorFirst = "Erik",
                            AuthorLast = "Nicolas",
                            Description = "Totam eos nemo cumque ipsum totam corrupti. Ut excepturi dolor non sunt commodi nam sunt id veniam. Dolor eligendi molestias dolor. Accusantium tenetur et modi voluptates voluptatem eius facilis nemo.",
                            Title = "Persistent background local area network",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 14,
                            AuthorFirst = "Todd",
                            AuthorLast = "Schultz",
                            Description = "Voluptatem dolorum minus quis quis qui quidem. Atque placeat voluptatem assumenda sit aut qui accusantium ut autem. At voluptatibus qui voluptatem. Molestias aut repellat eveniet voluptates et. Facilis quia quidem in et sint. Ut repellendus quaerat perspiciatis consequatur aut animi.",
                            Title = "Reactive bottom-line protocol",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 15,
                            AuthorFirst = "Marcos",
                            AuthorLast = "Krajcik",
                            Description = "Laborum iusto perferendis nostrum et nulla enim minima quia. Ut repudiandae facere. Sunt voluptates tempora sunt veritatis eaque labore quia dolores. Sed iusto debitis. Aspernatur velit atque maxime illum quas.",
                            Title = "Quality-focused dynamic hardware",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 16,
                            AuthorFirst = "Caroline",
                            AuthorLast = "Feeney",
                            Description = "Fugit soluta itaque accusantium quisquam ipsam aut. Voluptas hic ducimus accusamus quas consequatur. Voluptatem doloribus omnis. Rem excepturi sunt quaerat molestias quia quis nobis.",
                            Title = "Customer-focused holistic infrastructure",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 17,
                            AuthorFirst = "Eloise",
                            AuthorLast = "Boyer",
                            Description = "Fugiat optio quia quos quia voluptatem rerum ex aliquam voluptatum. Voluptas dicta sit ut officiis. Sit consequatur et sint sequi sed ut recusandae placeat. Explicabo facilis consequatur itaque. Adipisci voluptas harum ea hic quidem. Autem accusamus repellendus aliquam veritatis quidem voluptatem alias saepe fuga.",
                            Title = "Profit-focused content-based time-frame",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 18,
                            AuthorFirst = "Carlos",
                            AuthorLast = "Bode",
                            Description = "Numquam consequuntur illo quidem reiciendis enim aliquam. Placeat reprehenderit rerum voluptate. Voluptas quas temporibus fugiat. Enim quidem delectus unde et nihil perferendis. Ratione hic qui necessitatibus nisi harum velit distinctio.",
                            Title = "Pre-emptive multi-tasking frame",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 19,
                            AuthorFirst = "Herbert",
                            AuthorLast = "Wisozk",
                            Description = "Adipisci vel eius deserunt voluptas dolorum cumque. Nihil eligendi architecto. Aut magni ut debitis alias totam. Rerum alias ut sed perspiciatis non vero pariatur in eos.",
                            Title = "Distributed attitude-oriented approach",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 20,
                            AuthorFirst = "Claire",
                            AuthorLast = "Mraz",
                            Description = "Quo accusantium recusandae aliquid sed eius excepturi. Similique et amet sed. Velit et atque quos quam accusantium eos et facilis. Tempore et aspernatur ab reiciendis aut. Eos sed fugiat ut illum sunt.",
                            Title = "Versatile asynchronous interface",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 21,
                            AuthorFirst = "Carol",
                            AuthorLast = "Von",
                            Description = "Harum ipsum explicabo consequatur quo ea corporis eveniet laudantium ut. Quaerat sit enim soluta illum voluptatem impedit voluptatem perspiciatis. Qui quia qui facere. Nihil voluptatem et sapiente eos quasi sequi minima vel.",
                            Title = "Horizontal 5th generation policy",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 22,
                            AuthorFirst = "Rhonda",
                            AuthorLast = "Carter",
                            Description = "Delectus ipsam maxime officiis modi. Dolor nostrum ipsam ut omnis qui provident suscipit. Quis facere sit sint at modi itaque maiores possimus. Autem molestias consequatur laudantium nobis reiciendis excepturi laboriosam. Hic soluta fuga autem enim. Ea aliquid reiciendis debitis in hic.",
                            Title = "Function-based zero defect conglomeration",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 23,
                            AuthorFirst = "Irving",
                            AuthorLast = "Brakus",
                            Description = "Dolorem qui sunt laboriosam nesciunt sit animi magni incidunt debitis. Inventore possimus suscipit consequuntur consequatur est facere voluptatibus repudiandae. Temporibus quas et dolorem nisi alias perspiciatis ex pariatur eos. Velit aperiam dignissimos. Rerum consectetur dolore.",
                            Title = "Stand-alone 24/7 open system",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 24,
                            AuthorFirst = "Adam",
                            AuthorLast = "Cormier",
                            Description = "Aperiam omnis non dolores quaerat eos repudiandae nihil. Accusantium accusantium laborum odit sint dolores cum cupiditate sed. Aliquam facere est ipsa vitae quia.",
                            Title = "Advanced well-modulated encryption",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 25,
                            AuthorFirst = "Casey",
                            AuthorLast = "Maggio",
                            Description = "Ipsa accusamus voluptatem sint. Dolores ut quam consectetur voluptates voluptate. Et ipsum enim inventore et odio esse quia molestiae.",
                            Title = "Total 5th generation focus group",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 26,
                            AuthorFirst = "Cassandra",
                            AuthorLast = "Schoen",
                            Description = "Saepe non consequatur voluptate autem ipsam. Hic et ipsum molestiae consequuntur qui fugiat provident voluptates similique. Illo corporis beatae sunt consequatur dicta doloribus est reprehenderit. Consequuntur dolor voluptatem quisquam quis et odio in enim dolor. Omnis reiciendis ea qui a.",
                            Title = "Synchronised human-resource system engine",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 27,
                            AuthorFirst = "Olive",
                            AuthorLast = "Pagac",
                            Description = "Ut culpa quas qui doloribus aut aut. Et dolor aut ex qui. Placeat quo odio sunt fugiat. Ea et blanditiis repudiandae cumque sit eos aut earum. Rerum velit ea nulla voluptatem officia quia excepturi illum. Adipisci enim saepe nulla quia.",
                            Title = "Re-contextualized well-modulated customer loyalty",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 28,
                            AuthorFirst = "Leona",
                            AuthorLast = "Nitzsche",
                            Description = "Libero quaerat libero autem qui sit neque. Nulla qui cum et omnis. Sed impedit et rerum molestias commodi repellendus culpa nam.",
                            Title = "Reduced incremental benchmark",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 29,
                            AuthorFirst = "Jill",
                            AuthorLast = "Schroeder",
                            Description = "Sit cupiditate quod vitae deserunt tempore omnis fuga. Dolore consequatur architecto temporibus earum omnis et deserunt voluptates. A eveniet aspernatur accusantium quis asperiores repellat numquam eos.",
                            Title = "Monitored executive complexity",
                            isAvailable = true
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
