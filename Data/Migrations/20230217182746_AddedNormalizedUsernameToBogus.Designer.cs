// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RazorLibraryProject.Data;

#nullable disable

namespace RazorLibraryProject.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230217182746_AddedNormalizedUsernameToBogus")]
    partial class AddedNormalizedUsernameToBogus
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "10c11c67-13d9-4400-9adc-0d7ed3e6a411",
                            Name = "admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "84b96d08-e0ee-40a4-abeb-9cdc42620f98",
                            Name = "borrower",
                            NormalizedName = "BORROWER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "34000bb7-ea15-4d1b-884f-35171e140e24",
                            RoleId = "84b96d08-e0ee-40a4-abeb-9cdc42620f98"
                        },
                        new
                        {
                            UserId = "bce806c0-99b8-4f82-b5e8-fa33996e12f4",
                            RoleId = "10c11c67-13d9-4400-9adc-0d7ed3e6a411"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("RazorLibraryProject.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AuthorFirst")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthorLast")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isAvailable")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Book");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorFirst = "Cary",
                            AuthorLast = "Donnelly",
                            Description = "Est et quam dolore ipsa debitis officia eaque. Delectus harum voluptates eligendi dolores explicabo. Magnam incidunt sit eius adipisci architecto voluptatem placeat. Harum praesentium voluptatum qui rerum nisi nihil sunt molestias dolorem.",
                            Title = "Inverse impactful monitoring",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 2,
                            AuthorFirst = "Loretta",
                            AuthorLast = "Marquardt",
                            Description = "Officiis et sunt aliquid maiores reprehenderit sed fugit est aperiam. Quam laudantium et commodi ut sit. In laboriosam sequi. Doloremque repudiandae eos aliquid quia quos expedita.",
                            Title = "Pre-emptive leading edge policy",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 3,
                            AuthorFirst = "Charlene",
                            AuthorLast = "Hoppe",
                            Description = "Amet rerum qui et incidunt delectus tenetur accusamus dolores est. Autem nihil doloribus quam. Iste neque eos quam corrupti. Unde iusto ad voluptatibus consequuntur est perspiciatis non assumenda in. Cupiditate qui dolor asperiores.",
                            Title = "Universal empowering Graphic Interface",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 4,
                            AuthorFirst = "Juanita",
                            AuthorLast = "Tillman",
                            Description = "Recusandae est ut magnam incidunt quis natus consequatur. Quis cum voluptatem qui laboriosam dolorem. Ut numquam nulla maxime. Sapiente quod totam itaque voluptatem voluptatem. Occaecati incidunt optio.",
                            Title = "Up-sized global encoding",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 5,
                            AuthorFirst = "Milton",
                            AuthorLast = "Bradtke",
                            Description = "Facere eveniet ut non molestiae omnis et qui. Iure corrupti dignissimos voluptatibus qui. Provident aut et vel. Aliquam illo sit quaerat inventore dolores dolore similique eos. Magnam cum et aut aperiam ducimus dolores.",
                            Title = "Exclusive directional intranet",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 6,
                            AuthorFirst = "Terence",
                            AuthorLast = "Wilkinson",
                            Description = "Ut enim quo repellendus sed. Dolorem ut unde aut quis qui tenetur aspernatur. Repellat illo nostrum delectus magnam qui ipsum.",
                            Title = "Enterprise-wide uniform internet solution",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 7,
                            AuthorFirst = "Shelly",
                            AuthorLast = "Oberbrunner",
                            Description = "Rerum deleniti excepturi quas numquam praesentium. In repellendus sint soluta. Et aliquam deserunt rem suscipit. Dolores est qui numquam omnis maxime consequatur. Iure odio sapiente. Dolore sit aspernatur laudantium.",
                            Title = "Cross-group non-volatile leverage",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 8,
                            AuthorFirst = "Muriel",
                            AuthorLast = "Connelly",
                            Description = "Ut aliquam aliquam consectetur consequuntur. Ut voluptates possimus aut sint officiis iusto sequi sed vitae. Odio omnis eveniet reiciendis sunt autem dolorem ipsam quasi. A beatae quia.",
                            Title = "Customer-focused mobile monitoring",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 9,
                            AuthorFirst = "Roger",
                            AuthorLast = "Hessel",
                            Description = "Tempora est rem fugiat qui accusantium sapiente. Quis qui omnis et quae fugit sequi accusamus. Quia ea est nihil. Magnam eos maxime quasi veniam praesentium quaerat quaerat.",
                            Title = "Centralized local encoding",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 10,
                            AuthorFirst = "Domingo",
                            AuthorLast = "Wyman",
                            Description = "Veritatis eius aperiam. Et laborum quos quis labore. Soluta eos dolor eos et eveniet ea placeat.",
                            Title = "Monitored optimal parallelism",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 11,
                            AuthorFirst = "Felicia",
                            AuthorLast = "Fay",
                            Description = "Quae adipisci accusamus at voluptas esse ad expedita vel. Eligendi sequi cumque eveniet tempora numquam perferendis. At harum dolores vel hic.",
                            Title = "Upgradable global challenge",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 12,
                            AuthorFirst = "Ricardo",
                            AuthorLast = "Stroman",
                            Description = "Illo nobis quasi maxime reprehenderit velit itaque eos. In dolorem voluptatem commodi qui est dolores officia molestiae. Qui aut cupiditate illo dolorem beatae veniam architecto eos.",
                            Title = "De-engineered zero administration productivity",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 13,
                            AuthorFirst = "Helen",
                            AuthorLast = "Reilly",
                            Description = "Molestiae blanditiis voluptatem est corporis qui aut quisquam. Tempore debitis sed accusamus fuga nulla enim dolores laboriosam. Qui quas sequi repellendus. Impedit non qui enim est vero rerum. Itaque consequatur earum eligendi sint et distinctio.",
                            Title = "Horizontal holistic utilisation",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 14,
                            AuthorFirst = "Kristopher",
                            AuthorLast = "Hyatt",
                            Description = "Eaque ipsam adipisci et a similique veritatis autem voluptatem aliquam. Voluptatem dignissimos repudiandae ratione rerum repudiandae incidunt. Sed sed est suscipit explicabo non quibusdam qui. Ratione quia a et. Quae non et voluptatem laudantium distinctio velit qui.",
                            Title = "Self-enabling mobile migration",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 15,
                            AuthorFirst = "Alejandro",
                            AuthorLast = "Nikolaus",
                            Description = "Harum itaque reprehenderit maiores. Voluptas dolores minus architecto aut debitis. Dolor cumque dolores nobis qui unde eum qui qui animi. Est unde delectus incidunt tenetur.",
                            Title = "Object-based 24/7 array",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 16,
                            AuthorFirst = "Glenda",
                            AuthorLast = "Hills",
                            Description = "Adipisci fugiat sapiente repellat ut. Qui molestiae sed provident. Non sint asperiores laborum est exercitationem suscipit. Iste numquam repudiandae quod cumque reprehenderit velit dicta nihil facere.",
                            Title = "Innovative secondary database",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 17,
                            AuthorFirst = "Dustin",
                            AuthorLast = "Quigley",
                            Description = "Aut fuga et est. Quis quo repellat ex numquam et ut doloremque. Voluptatum facilis voluptatibus voluptatem voluptatem nihil velit. In debitis iste repudiandae eligendi et ab pariatur consequatur error. Odio recusandae sunt labore eos et quidem inventore ut qui.",
                            Title = "Universal bandwidth-monitored structure",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 18,
                            AuthorFirst = "Doyle",
                            AuthorLast = "Emard",
                            Description = "Ullam unde neque velit sed id veritatis sit doloribus. Nesciunt labore tempora nisi. Deleniti qui exercitationem occaecati dolor illum doloribus.",
                            Title = "Ergonomic regional success",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 19,
                            AuthorFirst = "Mike",
                            AuthorLast = "Lebsack",
                            Description = "Officiis blanditiis magni dolor omnis quia ipsam ipsum. Vitae non voluptatem. Non facilis nulla. Excepturi quibusdam corrupti dolorem ut vero dolor quia possimus ducimus. Odit et error dolores consequuntur velit sequi aspernatur qui.",
                            Title = "Optional optimizing superstructure",
                            isAvailable = false
                        },
                        new
                        {
                            Id = 20,
                            AuthorFirst = "Evelyn",
                            AuthorLast = "Bosco",
                            Description = "At ea voluptatem asperiores iusto. Tempore et aut quam expedita quia nisi ad. Est qui perferendis sint vero tempore aut molestiae alias atque. Mollitia aut corrupti nulla. Est totam libero nulla ut facere eum doloribus. Error laborum ut ut beatae eligendi recusandae quaerat molestiae perferendis.",
                            Title = "Front-line mission-critical product",
                            isAvailable = true
                        },
                        new
                        {
                            Id = 21,
                            AuthorFirst = "Yvette",
                            AuthorLast = "Kris",
                            Description = "At impedit deleniti adipisci eum magnam autem assumenda natus. Voluptate non doloribus delectus provident et. Voluptates earum vel eveniet. Quisquam cumque esse corporis deleniti ut illum officia praesentium.",
                            Title = "Enhanced tangible projection",
                            isAvailable = true
                        });
                });

            modelBuilder.Entity("RazorLibraryProject.Models.User", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.HasDiscriminator().HasValue("User");

                    b.HasData(
                        new
                        {
                            Id = "34000bb7-ea15-4d1b-884f-35171e140e24",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e2383821-93d2-401a-b68e-5e9188ddd537",
                            Email = "borrower@library.net",
                            EmailConfirmed = true,
                            LockoutEnabled = true,
                            NormalizedEmail = "borrower@library.net",
                            NormalizedUserName = "borrower@library.net",
                            PasswordHash = "AQAAAAIAAYagAAAAEFDDOc7XPaV8JIStU/xSh9s9tgmBrheWtouVhkKcu2Xpe5FsuwBYUspqBCj7FlAbsw==",
                            PhoneNumber = "",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "aa693015-1881-4262-8857-61992b90c61e",
                            TwoFactorEnabled = false,
                            UserName = "borrower@library.net"
                        },
                        new
                        {
                            Id = "bce806c0-99b8-4f82-b5e8-fa33996e12f4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ee8b7e47-b57c-4693-a3cc-e0bebe6a1537",
                            Email = "librarian@library.net",
                            EmailConfirmed = true,
                            LockoutEnabled = true,
                            NormalizedEmail = "librarian@library.net",
                            NormalizedUserName = "librarian@library.net",
                            PasswordHash = "AQAAAAIAAYagAAAAEMNi4NfyuO/0np8GrQtSxWW+nwBfDUoF/GaCzFTRVZa3HR7VQuO9fNlY5gC8gDzegg==",
                            PhoneNumber = "",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c7154aa7-ca39-455f-bede-55cbb193df01",
                            TwoFactorEnabled = false,
                            UserName = "librarian@library.net"
                        },
                        new
                        {
                            Id = "def0d338-2fbb-48f6-b653-5a29c4815a46",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "96ccdcb0-765d-4275-baef-d7f98e17f130",
                            Email = "ernesto18@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "",
                            NormalizedUserName = "ernesto18",
                            PasswordHash = "AQAAAAIAAYagAAAAEBRYtdyd7D5m4emamc1uheTpji+fIeeRfSHL2U0xcTk47RrPVd4ayzL5tmxpS27Beg==",
                            PhoneNumber = "555.720.5472 x52565",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4274cd4e-49b1-466c-b647-423dc0fb25da",
                            TwoFactorEnabled = false,
                            UserName = "Ernesto18"
                        },
                        new
                        {
                            Id = "28752060-0a72-4550-986a-63696bf52f9d",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9c7b4eae-120d-41ce-a13c-8c66098a5388",
                            Email = "glenn_hammes@library.net",
                            EmailConfirmed = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "",
                            NormalizedUserName = "glenn_hammes",
                            PasswordHash = "AQAAAAIAAYagAAAAEM1GyKb5KpA6og2O6KaBoAgHtvpwVD1vq/Ou8B+0ucR2JQZ8fltTP9Vaw/i6cuCrhg==",
                            PhoneNumber = "1-438-334-2584 x16319",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c5160c61-7df3-418e-b894-151f504f0360",
                            TwoFactorEnabled = false,
                            UserName = "Glenn_Hammes"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
